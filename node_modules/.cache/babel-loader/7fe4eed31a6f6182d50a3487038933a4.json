{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/sei35_labs/w4_homework/HW-GeneralFolder/starter_codes/src/component/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const {\n    searchItem,\n    setSearchItem\n  } = useState(\"\");\n  const [image, setImage] = useState({\n    img: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchPost = async (url, signal) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const rest = await fetch(url, {\n        signal\n      });\n\n      if (rest.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await rest.json();\n      setPost({\n        img: data.img\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleSelectionChange = event => {\n    setSelection(event.target.value);\n  };\n\n  useEffect(() => {\n    const url = \"https://media0.giphy.com/media/jVF3BJ8ahcsUeaIMA0/giphy_s.gif?cid=0a35e69818f7e77171d85ceb87d0c88b343d76fe5af11147&rid=giphy_s.gif&ct=g\" + searchItem;\n    const controller = new AbortController();\n    fetchPost(url, controller.signal);\n    return () => {\n      controller.abort();\n    };\n  }, [selection]);\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Use me to make a random search!\",\n      onChange: handleSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(SearchBar, \"02Kor0hYhk3c4dJjqdgKQVIzK4w=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/sei35_labs/w4_homework/HW-GeneralFolder/starter_codes/src/component/SearchBar.js"],"names":["React","useEffect","useState","SearchBar","searchItem","setSearchItem","image","setImage","img","isLoading","setIsLoading","error","setError","fetchPost","url","signal","rest","fetch","status","Error","data","json","setPost","err","message","handleSelectionChange","event","setSelection","target","value","controller","AbortController","abort","selection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,GAAG,EAAE;AAD4B,GAAD,CAAlC;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMW,SAAS,GAAG,OAAOC,GAAP,EAAYC,MAAZ,KAAuB;AACvCL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAMI,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAAEC,QAAAA;AAAF,OAAN,CAAxB;;AAEA,UAAIC,IAAI,CAACE,MAAL,KAAgB,GAApB,EAAyB;AACvB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAnB;AAEAC,MAAAA,OAAO,CAAC;AACNd,QAAAA,GAAG,EAAEY,IAAI,CAACZ;AADJ,OAAD,CAAP;AAGD,KAZD,CAYE,OAAOe,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAR;AACD;;AAEDd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBD;;AAuBA,QAAMe,qBAAqB,GAAIC,KAAD,IAAW;AACvCC,IAAAA,YAAY,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,GAAG,GACP,4IACAV,UAFF;AAGA,UAAM0B,UAAU,GAAG,IAAIC,eAAJ,EAAnB;AACAlB,IAAAA,SAAS,CAACC,GAAD,EAAMgB,UAAU,CAACf,MAAjB,CAAT;AAEA,WAAO,MAAM;AACXe,MAAAA,UAAU,CAACE,KAAX;AACD,KAFD;AAGD,GAVQ,EAUN,CAACC,SAAD,CAVM,CAAT;AAYA;;AACA;AAAA;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,WAAW,EAAC,iCADd;AAEE,MAAA,QAAQ,EAAER;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAMD,CAvDD;;GAAMtB,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst SearchBar = () => {\n  const { searchItem, setSearchItem } = useState(\"\");\n  const [image, setImage] = useState({\n    img: \"\",\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchPost = async (url, signal) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const rest = await fetch(url, { signal });\n\n      if (rest.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await rest.json();\n\n      setPost({\n        img: data.img,\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleSelectionChange = (event) => {\n    setSelection(event.target.value);\n  };\n\n  useEffect(() => {\n    const url =\n      \"https://media0.giphy.com/media/jVF3BJ8ahcsUeaIMA0/giphy_s.gif?cid=0a35e69818f7e77171d85ceb87d0c88b343d76fe5af11147&rid=giphy_s.gif&ct=g\" +\n      searchItem;\n    const controller = new AbortController();\n    fetchPost(url, controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, [selection]);\n\n  return;\n  <>\n    <Input\n      placeholder=\"Use me to make a random search!\"\n      onChange={handleSelectionChange}\n    ></Input>\n  </>;\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}