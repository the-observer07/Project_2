{"ast":null,"code":"var _jsxFileName = \"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport Result from \"./Result\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [commodity, setCommodity] = useState(\"\");\n  const [query, setQuery] = useState([]);\n  const [type, setType] = useState([]);\n  const [forex, setForex] = useState(\"\");\n  const [forexType, setForexType] = useState(\"\"); //============================================================================================================================================================================================\n\n  const commodityList = [\"RICE\", \"WHEAT\", \"SUGAR\", \"CORN\", \"WTIOIL\", \"BRENTOIL\", \"SOYBEAN\", \"COFFEE\", \"XAU\", \"XAG\", \"XPD\", \"XPT\", \"XRH\", \"RUBBER\", \"ETHANOL\", \"CPO\", \"NG\"];\n  const forexList = [{\n    id: \"AED\",\n    name: \"UnitedArabEmiratesDirham\"\n  }, {\n    id: \"AFN\",\n    name: \"AfghanAfghani\"\n  }, {\n    id: \"ALL\",\n    name: \"AlbanianLek\"\n  }, {\n    id: \"AMD\",\n    name: \"ArmenianDram\"\n  }, {\n    id: \"ANG\",\n    name: \"NetherlandsAntilleanGuilder\"\n  }, {\n    id: \"AOA\",\n    name: \"AngolanKwanza\"\n  }, {\n    id: \"ARS\",\n    name: \"ArgentinePeso\"\n  }, {\n    id: \"AUD\",\n    name: \"AustralianDollar\"\n  }, {\n    id: \"AWG\",\n    name: \"ArubanFlorin\"\n  }, {\n    id: \"AZN\",\n    name: \"AzerbaijaniManat\"\n  }, {\n    id: \"BAM\",\n    name: \"Bosnia-HerzegovinaConvertibleMark\"\n  }, {\n    id: \"BBD\",\n    name: \"BarbadianDollar\"\n  }, {\n    id: \"BDT\",\n    name: \"BangladeshiTaka\"\n  }, {\n    id: \"BGN\",\n    name: \"BulgarianLev\"\n  }, {\n    id: \"BHD\",\n    name: \"BahrainiDinar\"\n  }, {\n    id: \"BIF\",\n    name: \"BurundianFranc\"\n  }, {\n    id: \"BMD\",\n    name: \"BermudanDollar\"\n  }, {\n    id: \"BND\",\n    name: \"BruneiDollar\"\n  }, {\n    id: \"BOB\",\n    name: \"BolivianBoliviano\"\n  }, {\n    id: \"BRL\",\n    name: \"BrazilianReal\"\n  }, {\n    id: \"BSD\",\n    name: \"BahamianDollar\"\n  }, {\n    id: \"BTC\",\n    name: \"Bitcoin\"\n  }, {\n    id: \"BTN\",\n    name: \"BhutaneseNgultrum\"\n  }, {\n    id: \"BWP\",\n    name: \"BotswananPula\"\n  }, {\n    id: \"BYR\",\n    name: \"BelarusianRuble\"\n  }, {\n    id: \"BZD\",\n    name: \"BelizeDollar\"\n  }, {\n    id: \"CAD\",\n    name: \"CanadianDollar\"\n  }, {\n    id: \"CDF\",\n    name: \"CongoleseFranc\"\n  }, {\n    id: \"CHF\",\n    name: \"SwissFranc\"\n  }, {\n    id: \"CLF\",\n    name: \"ChileanUnitofAccount(UF)\"\n  }, {\n    id: \"CLP\",\n    name: \"ChileanPeso\"\n  }, {\n    id: \"CNY\",\n    name: \"ChineseYuan\"\n  }, {\n    id: \"COP\",\n    name: \"ColombianPeso\"\n  }, {\n    id: \"CRC\",\n    name: \"CostaRicanColón\"\n  }, {\n    id: \"CUC\",\n    name: \"CubanConvertiblePeso\"\n  }, {\n    id: \"CUP\",\n    name: \"CubanPeso\"\n  }, {\n    id: \"CVE\",\n    name: \"CapeVerdeanEscudo\"\n  }, {\n    id: \"CZK\",\n    name: \"CzechRepublicKoruna\"\n  }, {\n    id: \"DJF\",\n    name: \"DjiboutianFranc\"\n  }, {\n    id: \"DKK\",\n    name: \"DanishKrone\"\n  }, {\n    id: \"DOP\",\n    name: \"DominicanPeso\"\n  }, {\n    id: \"DZD\",\n    name: \"AlgerianDinar\"\n  }, {\n    id: \"EGP\",\n    name: \"EgyptianPound\"\n  }, {\n    id: \"ERN\",\n    name: \"EritreanNakfa\"\n  }, {\n    id: \"ETB\",\n    name: \"EthiopianBirr\"\n  }, {\n    id: \"EUR\",\n    name: \"Euro\"\n  }, {\n    id: \"FJD\",\n    name: \"FijianDollar\"\n  }, {\n    id: \"FKP\",\n    name: \"FalklandIslandsPound\"\n  }, {\n    id: \"GBP\",\n    name: \"BritishPoundSterling\"\n  }, {\n    id: \"GEL\",\n    name: \"GeorgianLari\"\n  }, {\n    id: \"GGP\",\n    name: \"GuernseyPound\"\n  }, {\n    id: \"GHS\",\n    name: \"GhanaianCedi\"\n  }, {\n    id: \"GIP\",\n    name: \"GibraltarPound\"\n  }, {\n    id: \"GMD\",\n    name: \"GambianDalasi\"\n  }, {\n    id: \"GNF\",\n    name: \"GuineanFranc\"\n  }, {\n    id: \"GTQ\",\n    name: \"GuatemalanQuetzal\"\n  }, {\n    id: \"GYD\",\n    name: \"GuyanaeseDollar\"\n  }, {\n    id: \"HKD\",\n    name: \"HongKongDollar\"\n  }, {\n    id: \"HNL\",\n    name: \"HonduranLempira\"\n  }, {\n    id: \"HRK\",\n    name: \"CroatianKuna\"\n  }, {\n    id: \"HTG\",\n    name: \"HaitianGourde\"\n  }, {\n    id: \"HUF\",\n    name: \"HungarianForint\"\n  }, {\n    id: \"IDR\",\n    name: \"IndonesianRupiah\"\n  }, {\n    id: \"ILS\",\n    name: \"IsraeliNewSheqel\"\n  }, {\n    id: \"IMP\",\n    name: \"Manxpound\"\n  }, {\n    id: \"INR\",\n    name: \"IndianRupee\"\n  }, {\n    id: \"IQD\",\n    name: \"IraqiDinar\"\n  }, {\n    id: \"IRR\",\n    name: \"IranianRial\"\n  }, {\n    id: \"ISK\",\n    name: \"IcelandicKróna\"\n  }, {\n    id: \"JEP\",\n    name: \"JerseyPound\"\n  }, {\n    id: \"JMD\",\n    name: \"JamaicanDollar\"\n  }, {\n    id: \"JOD\",\n    name: \"JordanianDinar\"\n  }, {\n    id: \"JPY\",\n    name: \"JapaneseYen\"\n  }, {\n    id: \"KES\",\n    name: \"KenyanShilling\"\n  }, {\n    id: \"KGS\",\n    name: \"KyrgystaniSom\"\n  }, {\n    id: \"KHR\",\n    name: \"CambodianRiel\"\n  }, {\n    id: \"KMF\",\n    name: \"ComorianFranc\"\n  }, {\n    id: \"KPW\",\n    name: \"NorthKoreanWon\"\n  }, {\n    id: \"KRW\",\n    name: \"SouthKoreanWon\"\n  }, {\n    id: \"KWD\",\n    name: \"KuwaitiDinar\"\n  }, {\n    id: \"KYD\",\n    name: \"CaymanIslandsDollar\"\n  }, {\n    id: \"KZT\",\n    name: \"KazakhstaniTenge\"\n  }, {\n    id: \"LAK\",\n    name: \"LaotianKip\"\n  }, {\n    id: \"LBP\",\n    name: \"LebanesePound\"\n  }, {\n    id: \"LKR\",\n    name: \"SriLankanRupee\"\n  }, {\n    id: \"LRD\",\n    name: \"LiberianDollar\"\n  }, {\n    id: \"LSL\",\n    name: \"LesothoLoti\"\n  }, {\n    id: \"LTL\",\n    name: \"LithuanianLitas\"\n  }, {\n    id: \"LVL\",\n    name: \"LatvianLats\"\n  }, {\n    id: \"LYD\",\n    name: \"LibyanDinar\"\n  }, {\n    id: \"MAD\",\n    name: \"MoroccanDirham\"\n  }, {\n    id: \"MDL\",\n    name: \"MoldovanLeu\"\n  }, {\n    id: \"MGA\",\n    name: \"MalagasyAriary\"\n  }, {\n    id: \"MKD\",\n    name: \"MacedonianDenar\"\n  }, {\n    id: \"MMK\",\n    name: \"MyanmaKyat\"\n  }, {\n    id: \"MNT\",\n    name: \"MongolianTugrik\"\n  }, {\n    id: \"MOP\",\n    name: \"MacanesePataca\"\n  }, {\n    id: \"MRO\",\n    name: \"MauritanianOuguiya\"\n  }, {\n    id: \"MUR\",\n    name: \"MauritianRupee\"\n  }, {\n    id: \"MVR\",\n    name: \"MaldivianRufiyaa\"\n  }, {\n    id: \"MWK\",\n    name: \"MalawianKwacha\"\n  }, {\n    id: \"MXN\",\n    name: \"MexicanPeso\"\n  }, {\n    id: \"MYR\",\n    name: \"MalaysianRinggit\"\n  }, {\n    id: \"MZN\",\n    name: \"MozambicanMetical\"\n  }, {\n    id: \"NAD\",\n    name: \"NamibianDollar\"\n  }, {\n    id: \"NGN\",\n    name: \"NigerianNaira\"\n  }, {\n    id: \"NIO\",\n    name: \"NicaraguanCórdoba\"\n  }, {\n    id: \"NOK\",\n    name: \"NorwegianKrone\"\n  }, {\n    id: \"NPR\",\n    name: \"NepaleseRupee\"\n  }, {\n    id: \"NZD\",\n    name: \"NewZealandDollar\"\n  }, {\n    id: \"OMR\",\n    name: \"OmaniRial\"\n  }, {\n    id: \"PAB\",\n    name: \"PanamanianBalboa\"\n  }, {\n    id: \"PEN\",\n    name: \"PeruvianNuevoSol\"\n  }, {\n    id: \"PGK\",\n    name: \"PapuaNewGuineanKina\"\n  }, {\n    id: \"PHP\",\n    name: \"PhilippinePeso\"\n  }, {\n    id: \"PKR\",\n    name: \"PakistaniRupee\"\n  }, {\n    id: \"PLN\",\n    name: \"PolishZloty\"\n  }, {\n    id: \"PYG\",\n    name: \"ParaguayanGuarani\"\n  }, {\n    id: \"QAR\",\n    name: \"QatariRial\"\n  }, {\n    id: \"RON\",\n    name: \"RomanianLeu\"\n  }, {\n    id: \"RSD\",\n    name: \"SerbianDinar\"\n  }, {\n    id: \"RUB\",\n    name: \"RussianRuble\"\n  }, {\n    id: \"RWF\",\n    name: \"RwandanFranc\"\n  }, {\n    id: \"SAR\",\n    name: \"SaudiRiyal\"\n  }, {\n    id: \"SBD\",\n    name: \"SolomonIslandsDollar\"\n  }, {\n    id: \"SCR\",\n    name: \"SeychelloisRupee\"\n  }, {\n    id: \"SDG\",\n    name: \"SudanesePound\"\n  }, {\n    id: \"SEK\",\n    name: \"SwedishKrona\"\n  }, {\n    id: \"SGD\",\n    name: \"SingaporeDollar\"\n  }, {\n    id: \"SHP\",\n    name: \"SaintHelenaPound\"\n  }, {\n    id: \"SLL\",\n    name: \"SierraLeoneanLeone\"\n  }, {\n    id: \"SOS\",\n    name: \"SomaliShilling\"\n  }, {\n    id: \"SRD\",\n    name: \"SurinameseDollar\"\n  }, {\n    id: \"STD\",\n    name: \"SãoToméandPríncipeDobra\"\n  }, {\n    id: \"SVC\",\n    name: \"SalvadoranColón\"\n  }, {\n    id: \"SYP\",\n    name: \"SyrianPound\"\n  }, {\n    id: \"SZL\",\n    name: \"SwaziLilangeni\"\n  }, {\n    id: \"THB\",\n    name: \"ThaiBaht\"\n  }, {\n    id: \"TJS\",\n    name: \"TajikistaniSomoni\"\n  }, {\n    id: \"TMT\",\n    name: \"TurkmenistaniManat\"\n  }, {\n    id: \"TND\",\n    name: \"TunisianDinar\"\n  }, {\n    id: \"TOP\",\n    name: \"TonganPaʻanga\"\n  }, {\n    id: \"TRY\",\n    name: \"TurkishLira\"\n  }, {\n    id: \"TTD\",\n    name: \"TrinidadandTobagoDollar\"\n  }, {\n    id: \"TWD\",\n    name: \"NewTaiwanDollar\"\n  }, {\n    id: \"TZS\",\n    name: \"TanzanianShilling\"\n  }, {\n    id: \"UAH\",\n    name: \"UkrainianHryvnia\"\n  }, {\n    id: \"UGX\",\n    name: \"UgandanShilling\"\n  }, {\n    id: \"USD\",\n    name: \"UnitedStatesDollar\"\n  }, {\n    id: \"UYU\",\n    name: \"UruguayanPeso\"\n  }, {\n    id: \"UZS\",\n    name: \"UzbekistanSom\"\n  }, {\n    id: \"VEF\",\n    name: \"VenezuelanBolívarFuerte\"\n  }, {\n    id: \"VND\",\n    name: \"VietnameseDong\"\n  }, {\n    id: \"VUV\",\n    name: \"VanuatuVatu\"\n  }, {\n    id: \"WST\",\n    name: \"SamoanTala\"\n  }, {\n    id: \"XAF\",\n    name: \"CFAFrancBEAC\"\n  }, {\n    id: \"XAG\",\n    name: \"Silver(troyounce)\"\n  }, {\n    id: \"XAU\",\n    name: \"Gold(troyounce)\"\n  }, {\n    id: \"XCD\",\n    name: \"EastCaribbeanDollar\"\n  }, {\n    id: \"XDR\",\n    name: \"SpecialDrawingRights\"\n  }, {\n    id: \"XOF\",\n    name: \"CFAFrancBCEAO\"\n  }, {\n    id: \"XPF\",\n    name: \"CFPFranc\"\n  }, {\n    id: \"YER\",\n    name: \"YemeniRial\"\n  }, {\n    id: \"ZAR\",\n    name: \"SouthAfricanRand\"\n  }, {\n    id: \"ZMK\",\n    name: \"ZambianKwacha(pre-2013)\"\n  }, {\n    id: \"ZMW\",\n    name: \"ZambianKwacha\"\n  }, {\n    id: \"ZWL\",\n    name: \"ZimbabweanDollar\"\n  }];\n  const cryptoList = []; // CommodityAPI\n\n  const commodityAPI = `https://www.commodities-api.com/api/latest?access_key=jhvo01w5j98zhcbi517u32j1mc14wgkh1zwzfp8rx4x3bdzujvnvx6gzody4&base=${query}&symbols=USD`; // ForexAPI\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=EUR,GBP,CAD,PLN&source=USD&format=1`; //CryptoAPI\n\n  const cryptoAPI = ``; //Need to consolidate API to decide which to call (if this then that)\n  //Maybe using state, so if state change then select that one?\n  //map the forex array to sort names\n\n  const sortForex = forexList.map(forexType => {\n    return {\n      commodityName: forexType.name\n    };\n  });\n  setForexType(sortForex);\n  console.log(forexList.name); // thinking maybe i can consolidate the api keywords under consolidatedAPI so that i can do an if, else\n\n  const consolidatedAPI = ``;\n  console.log(commodityAPI);\n\n  const makeApiCall = async () => {\n    const res = await fetch(commodityAPI);\n    const rawData = await res.json(); // console.log(rawData);\n\n    const rawDataArray = [rawData]; // console.log(rawDataArray);\n\n    const filteredData = rawDataArray.map(type => {\n      return {\n        price: type.data.rates,\n        unit: type.data.unit\n      };\n    });\n    setType(filteredData);\n  }; // console.log(type);\n\n\n  const handleSelectionChange = event => {\n    setCommodity(event.target.value); // console.log(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select an input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownList, {\n      data: forexList.name // forex={forexList}\n      ,\n      onChange: nextValue => setQuery(nextValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeApiCall,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"NTGuJse2WSdQn7UF3PxPX//OUzA=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js"],"names":["React","useState","useEffect","DropdownList","Result","Input","commodity","setCommodity","query","setQuery","type","setType","forex","setForex","forexType","setForexType","commodityList","forexList","id","name","cryptoList","commodityAPI","forexAPI","cryptoAPI","sortForex","map","commodityName","console","log","consolidatedAPI","makeApiCall","res","fetch","rawData","json","rawDataArray","filteredData","price","data","rates","unit","handleSelectionChange","event","target","value","nextValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport Result from \"./Result\";\n\nconst Input = () => {\n  const [commodity, setCommodity] = useState(\"\");\n  const [query, setQuery] = useState([]);\n  const [type, setType] = useState([]);\n  const [forex, setForex] = useState(\"\");\n  const [forexType, setForexType] = useState(\"\");\n\n  //============================================================================================================================================================================================\n\n  const commodityList = [\n    \"RICE\",\n    \"WHEAT\",\n    \"SUGAR\",\n    \"CORN\",\n    \"WTIOIL\",\n    \"BRENTOIL\",\n    \"SOYBEAN\",\n    \"COFFEE\",\n    \"XAU\",\n    \"XAG\",\n    \"XPD\",\n    \"XPT\",\n    \"XRH\",\n    \"RUBBER\",\n    \"ETHANOL\",\n    \"CPO\",\n    \"NG\",\n  ];\n\n  const forexList = [\n    { id: \"AED\", name: \"UnitedArabEmiratesDirham\" },\n    { id: \"AFN\", name: \"AfghanAfghani\" },\n    { id: \"ALL\", name: \"AlbanianLek\" },\n    { id: \"AMD\", name: \"ArmenianDram\" },\n    { id: \"ANG\", name: \"NetherlandsAntilleanGuilder\" },\n    { id: \"AOA\", name: \"AngolanKwanza\" },\n    { id: \"ARS\", name: \"ArgentinePeso\" },\n    { id: \"AUD\", name: \"AustralianDollar\" },\n    { id: \"AWG\", name: \"ArubanFlorin\" },\n    { id: \"AZN\", name: \"AzerbaijaniManat\" },\n    { id: \"BAM\", name: \"Bosnia-HerzegovinaConvertibleMark\" },\n    { id: \"BBD\", name: \"BarbadianDollar\" },\n    { id: \"BDT\", name: \"BangladeshiTaka\" },\n    { id: \"BGN\", name: \"BulgarianLev\" },\n    { id: \"BHD\", name: \"BahrainiDinar\" },\n    { id: \"BIF\", name: \"BurundianFranc\" },\n    { id: \"BMD\", name: \"BermudanDollar\" },\n    { id: \"BND\", name: \"BruneiDollar\" },\n    { id: \"BOB\", name: \"BolivianBoliviano\" },\n    { id: \"BRL\", name: \"BrazilianReal\" },\n    { id: \"BSD\", name: \"BahamianDollar\" },\n    { id: \"BTC\", name: \"Bitcoin\" },\n    { id: \"BTN\", name: \"BhutaneseNgultrum\" },\n    { id: \"BWP\", name: \"BotswananPula\" },\n    { id: \"BYR\", name: \"BelarusianRuble\" },\n    { id: \"BZD\", name: \"BelizeDollar\" },\n    { id: \"CAD\", name: \"CanadianDollar\" },\n    { id: \"CDF\", name: \"CongoleseFranc\" },\n    { id: \"CHF\", name: \"SwissFranc\" },\n    { id: \"CLF\", name: \"ChileanUnitofAccount(UF)\" },\n    { id: \"CLP\", name: \"ChileanPeso\" },\n    { id: \"CNY\", name: \"ChineseYuan\" },\n    { id: \"COP\", name: \"ColombianPeso\" },\n    { id: \"CRC\", name: \"CostaRicanColón\" },\n    { id: \"CUC\", name: \"CubanConvertiblePeso\" },\n    { id: \"CUP\", name: \"CubanPeso\" },\n    { id: \"CVE\", name: \"CapeVerdeanEscudo\" },\n    { id: \"CZK\", name: \"CzechRepublicKoruna\" },\n    { id: \"DJF\", name: \"DjiboutianFranc\" },\n    { id: \"DKK\", name: \"DanishKrone\" },\n    { id: \"DOP\", name: \"DominicanPeso\" },\n    { id: \"DZD\", name: \"AlgerianDinar\" },\n    { id: \"EGP\", name: \"EgyptianPound\" },\n    { id: \"ERN\", name: \"EritreanNakfa\" },\n    { id: \"ETB\", name: \"EthiopianBirr\" },\n    { id: \"EUR\", name: \"Euro\" },\n    { id: \"FJD\", name: \"FijianDollar\" },\n    { id: \"FKP\", name: \"FalklandIslandsPound\" },\n    { id: \"GBP\", name: \"BritishPoundSterling\" },\n    { id: \"GEL\", name: \"GeorgianLari\" },\n    { id: \"GGP\", name: \"GuernseyPound\" },\n    { id: \"GHS\", name: \"GhanaianCedi\" },\n    { id: \"GIP\", name: \"GibraltarPound\" },\n    { id: \"GMD\", name: \"GambianDalasi\" },\n    { id: \"GNF\", name: \"GuineanFranc\" },\n    { id: \"GTQ\", name: \"GuatemalanQuetzal\" },\n    { id: \"GYD\", name: \"GuyanaeseDollar\" },\n    { id: \"HKD\", name: \"HongKongDollar\" },\n    { id: \"HNL\", name: \"HonduranLempira\" },\n    { id: \"HRK\", name: \"CroatianKuna\" },\n    { id: \"HTG\", name: \"HaitianGourde\" },\n    { id: \"HUF\", name: \"HungarianForint\" },\n    { id: \"IDR\", name: \"IndonesianRupiah\" },\n    { id: \"ILS\", name: \"IsraeliNewSheqel\" },\n    { id: \"IMP\", name: \"Manxpound\" },\n    { id: \"INR\", name: \"IndianRupee\" },\n    { id: \"IQD\", name: \"IraqiDinar\" },\n    { id: \"IRR\", name: \"IranianRial\" },\n    { id: \"ISK\", name: \"IcelandicKróna\" },\n    { id: \"JEP\", name: \"JerseyPound\" },\n    { id: \"JMD\", name: \"JamaicanDollar\" },\n    { id: \"JOD\", name: \"JordanianDinar\" },\n    { id: \"JPY\", name: \"JapaneseYen\" },\n    { id: \"KES\", name: \"KenyanShilling\" },\n    { id: \"KGS\", name: \"KyrgystaniSom\" },\n    { id: \"KHR\", name: \"CambodianRiel\" },\n    { id: \"KMF\", name: \"ComorianFranc\" },\n    { id: \"KPW\", name: \"NorthKoreanWon\" },\n    { id: \"KRW\", name: \"SouthKoreanWon\" },\n    { id: \"KWD\", name: \"KuwaitiDinar\" },\n    { id: \"KYD\", name: \"CaymanIslandsDollar\" },\n    { id: \"KZT\", name: \"KazakhstaniTenge\" },\n    { id: \"LAK\", name: \"LaotianKip\" },\n    { id: \"LBP\", name: \"LebanesePound\" },\n    { id: \"LKR\", name: \"SriLankanRupee\" },\n    { id: \"LRD\", name: \"LiberianDollar\" },\n    { id: \"LSL\", name: \"LesothoLoti\" },\n    { id: \"LTL\", name: \"LithuanianLitas\" },\n    { id: \"LVL\", name: \"LatvianLats\" },\n    { id: \"LYD\", name: \"LibyanDinar\" },\n    { id: \"MAD\", name: \"MoroccanDirham\" },\n    { id: \"MDL\", name: \"MoldovanLeu\" },\n    { id: \"MGA\", name: \"MalagasyAriary\" },\n    { id: \"MKD\", name: \"MacedonianDenar\" },\n    { id: \"MMK\", name: \"MyanmaKyat\" },\n    { id: \"MNT\", name: \"MongolianTugrik\" },\n    { id: \"MOP\", name: \"MacanesePataca\" },\n    { id: \"MRO\", name: \"MauritanianOuguiya\" },\n    { id: \"MUR\", name: \"MauritianRupee\" },\n    { id: \"MVR\", name: \"MaldivianRufiyaa\" },\n    { id: \"MWK\", name: \"MalawianKwacha\" },\n    { id: \"MXN\", name: \"MexicanPeso\" },\n    { id: \"MYR\", name: \"MalaysianRinggit\" },\n    { id: \"MZN\", name: \"MozambicanMetical\" },\n    { id: \"NAD\", name: \"NamibianDollar\" },\n    { id: \"NGN\", name: \"NigerianNaira\" },\n    { id: \"NIO\", name: \"NicaraguanCórdoba\" },\n    { id: \"NOK\", name: \"NorwegianKrone\" },\n    { id: \"NPR\", name: \"NepaleseRupee\" },\n    { id: \"NZD\", name: \"NewZealandDollar\" },\n    { id: \"OMR\", name: \"OmaniRial\" },\n    { id: \"PAB\", name: \"PanamanianBalboa\" },\n    { id: \"PEN\", name: \"PeruvianNuevoSol\" },\n    { id: \"PGK\", name: \"PapuaNewGuineanKina\" },\n    { id: \"PHP\", name: \"PhilippinePeso\" },\n    { id: \"PKR\", name: \"PakistaniRupee\" },\n    { id: \"PLN\", name: \"PolishZloty\" },\n    { id: \"PYG\", name: \"ParaguayanGuarani\" },\n    { id: \"QAR\", name: \"QatariRial\" },\n    { id: \"RON\", name: \"RomanianLeu\" },\n    { id: \"RSD\", name: \"SerbianDinar\" },\n    { id: \"RUB\", name: \"RussianRuble\" },\n    { id: \"RWF\", name: \"RwandanFranc\" },\n    { id: \"SAR\", name: \"SaudiRiyal\" },\n    { id: \"SBD\", name: \"SolomonIslandsDollar\" },\n    { id: \"SCR\", name: \"SeychelloisRupee\" },\n    { id: \"SDG\", name: \"SudanesePound\" },\n    { id: \"SEK\", name: \"SwedishKrona\" },\n    { id: \"SGD\", name: \"SingaporeDollar\" },\n    { id: \"SHP\", name: \"SaintHelenaPound\" },\n    { id: \"SLL\", name: \"SierraLeoneanLeone\" },\n    { id: \"SOS\", name: \"SomaliShilling\" },\n    { id: \"SRD\", name: \"SurinameseDollar\" },\n    { id: \"STD\", name: \"SãoToméandPríncipeDobra\" },\n    { id: \"SVC\", name: \"SalvadoranColón\" },\n    { id: \"SYP\", name: \"SyrianPound\" },\n    { id: \"SZL\", name: \"SwaziLilangeni\" },\n    { id: \"THB\", name: \"ThaiBaht\" },\n    { id: \"TJS\", name: \"TajikistaniSomoni\" },\n    { id: \"TMT\", name: \"TurkmenistaniManat\" },\n    { id: \"TND\", name: \"TunisianDinar\" },\n    { id: \"TOP\", name: \"TonganPaʻanga\" },\n    { id: \"TRY\", name: \"TurkishLira\" },\n    { id: \"TTD\", name: \"TrinidadandTobagoDollar\" },\n    { id: \"TWD\", name: \"NewTaiwanDollar\" },\n    { id: \"TZS\", name: \"TanzanianShilling\" },\n    { id: \"UAH\", name: \"UkrainianHryvnia\" },\n    { id: \"UGX\", name: \"UgandanShilling\" },\n    { id: \"USD\", name: \"UnitedStatesDollar\" },\n    { id: \"UYU\", name: \"UruguayanPeso\" },\n    { id: \"UZS\", name: \"UzbekistanSom\" },\n    { id: \"VEF\", name: \"VenezuelanBolívarFuerte\" },\n    { id: \"VND\", name: \"VietnameseDong\" },\n    { id: \"VUV\", name: \"VanuatuVatu\" },\n    { id: \"WST\", name: \"SamoanTala\" },\n    { id: \"XAF\", name: \"CFAFrancBEAC\" },\n    { id: \"XAG\", name: \"Silver(troyounce)\" },\n    { id: \"XAU\", name: \"Gold(troyounce)\" },\n    { id: \"XCD\", name: \"EastCaribbeanDollar\" },\n    { id: \"XDR\", name: \"SpecialDrawingRights\" },\n    { id: \"XOF\", name: \"CFAFrancBCEAO\" },\n    { id: \"XPF\", name: \"CFPFranc\" },\n    { id: \"YER\", name: \"YemeniRial\" },\n    { id: \"ZAR\", name: \"SouthAfricanRand\" },\n    { id: \"ZMK\", name: \"ZambianKwacha(pre-2013)\" },\n    { id: \"ZMW\", name: \"ZambianKwacha\" },\n    { id: \"ZWL\", name: \"ZimbabweanDollar\" },\n  ];\n\n  const cryptoList = [];\n\n  // CommodityAPI\n\n  const commodityAPI = `https://www.commodities-api.com/api/latest?access_key=jhvo01w5j98zhcbi517u32j1mc14wgkh1zwzfp8rx4x3bdzujvnvx6gzody4&base=${query}&symbols=USD`;\n\n  // ForexAPI\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=EUR,GBP,CAD,PLN&source=USD&format=1`;\n\n  //CryptoAPI\n\n  const cryptoAPI = ``;\n\n  //Need to consolidate API to decide which to call (if this then that)\n  //Maybe using state, so if state change then select that one?\n\n  //map the forex array to sort names\n  const sortForex = forexList.map((forexType) => {\n    return {\n      commodityName: forexType.name,\n    };\n  });\n  setForexType(sortForex);\n  console.log(forexList.name);\n\n  // thinking maybe i can consolidate the api keywords under consolidatedAPI so that i can do an if, else\n\n  const consolidatedAPI = ``;\n\n  console.log(commodityAPI);\n\n  const makeApiCall = async () => {\n    const res = await fetch(commodityAPI);\n    const rawData = await res.json();\n\n    // console.log(rawData);\n\n    const rawDataArray = [rawData];\n\n    // console.log(rawDataArray);\n\n    const filteredData = rawDataArray.map((type) => {\n      return {\n        price: type.data.rates,\n        unit: type.data.unit,\n      };\n    });\n    setType(filteredData);\n  };\n  // console.log(type);\n\n  const handleSelectionChange = (event) => {\n    setCommodity(event.target.value);\n    // console.log(event);\n  };\n\n  return (\n    <div>\n      <h2>Select an input</h2>\n      <DropdownList\n        data={forexList.name}\n        // forex={forexList}\n        onChange={(nextValue) => setQuery(nextValue)}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <p>{query}</p> */}\n      <Result type={type} />\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}