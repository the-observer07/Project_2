[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Result.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CryptoTicker.js":"7"},{"size":142,"mtime":1616592305000,"results":"8","hashOfConfig":"9"},{"size":441,"mtime":1647881690690,"results":"10","hashOfConfig":"9"},{"size":2163,"mtime":1647880682639,"results":"11","hashOfConfig":"9"},{"size":410,"mtime":1647876759050,"results":"12","hashOfConfig":"9"},{"size":10402,"mtime":1647880662465,"results":"13","hashOfConfig":"9"},{"size":1468,"mtime":1647881654572,"results":"14","hashOfConfig":"9"},{"size":2069,"mtime":1647885349015,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1as9eb2",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["41","42"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["43","44","45","46"],[],"import React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport Result from \"./Result\";\n\n//============================================================================================================================================================================================\n\nconst commodityList = [\n  \"RICE\",\n  \"WHEAT\",\n  \"SUGAR\",\n  \"CORN\",\n  \"WTIOIL\",\n  \"BRENTOIL\",\n  \"SOYBEAN\",\n  \"COFFEE\",\n  \"XAU\",\n  \"XAG\",\n  \"XPD\",\n  \"XPT\",\n  \"XRH\",\n  \"RUBBER\",\n  \"ETHANOL\",\n  \"CPO\",\n  \"NG\",\n];\n\nconst Commodity = () => {\n  const [commodity, setCommodity] = useState(\"\");\n  const [query, setQuery] = useState([]);\n  const [type, setType] = useState([]);\n\n  // CommodityAPI\n\n  const commodityAPI = `https://www.commodities-api.com/api/latest?access_key=jhvo01w5j98zhcbi517u32j1mc14wgkh1zwzfp8rx4x3bdzujvnvx6gzody4&base=${query}&symbols=USD`;\n\n  //CryptoAPI\n\n  // const cryptoAPI = ``;\n\n  //Need to consolidate API to decide which to call (if this then that)\n  //Maybe using state, so if state change then select that one?\n\n  //map the forex array to sort names\n\n  // thinking maybe i can consolidate the api keywords under consolidatedAPI so that i can do an if, else\n\n  const consolidatedAPI = ``;\n\n  // console.log(commodityAPI);\n\n  const makeApiCall = async () => {\n    const res = await fetch(commodityAPI);\n    const rawData = await res.json();\n\n    // console.log(rawData);\n\n    const rawDataArray = [rawData];\n\n    // console.log(rawDataArray);\n\n    const filteredData = rawDataArray.map((duck) => {\n      return {\n        price: duck.data.rates,\n        unit: duck.data.unit,\n      };\n    });\n    setType(filteredData);\n  };\n  // console.log(type);\n\n  const handleSelectionChange = (event) => {\n    setCommodity(event.target.value);\n    // console.log(event);\n  };\n\n  return (\n    <div>\n      <h2>Select a commodity</h2>\n      <DropdownList\n        data={commodityList}\n        // forex={forexList}\n        onChange={(nextValue) => setQuery(nextValue)}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <p>{query}</p> */}\n      <Result type={type} />\n    </div>\n  );\n};\n\nexport default Commodity;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Result.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["47","48","49","50","51"],[],"import React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport Result from \"./Result\";\n\nconst forexList = [\n  { id: \"AED\", name: \"United Arab Emirates Dirham\" },\n  { id: \"AFN\", name: \"Afghan Afghani\" },\n  { id: \"ALL\", name: \"Albanian Lek\" },\n  { id: \"AMD\", name: \"Armenian Dram\" },\n  { id: \"ANG\", name: \"Netherlands Antillean Guilder\" },\n  { id: \"AOA\", name: \"Angolan Kwanza\" },\n  { id: \"ARS\", name: \"Argentine Peso\" },\n  { id: \"AUD\", name: \"Australian Dollar\" },\n  { id: \"AWG\", name: \"Aruban Florin\" },\n  { id: \"AZN\", name: \"Azerbaijani Manat\" },\n  { id: \"BAM\", name: \"Bosnia-Herzegovina Convertible Mark\" },\n  { id: \"BBD\", name: \"Barbadian Dollar\" },\n  { id: \"BDT\", name: \"Bangladeshi Taka\" },\n  { id: \"BGN\", name: \"Bulgarian Lev\" },\n  { id: \"BHD\", name: \"Bahraini Dinar\" },\n  { id: \"BIF\", name: \"Burundian Franc\" },\n  { id: \"BMD\", name: \"Bermudan Dollar\" },\n  { id: \"BND\", name: \"Brunei Dollar\" },\n  { id: \"BOB\", name: \"Bolivian Boliviano\" },\n  { id: \"BRL\", name: \"Brazilian Real\" },\n  { id: \"BSD\", name: \"Bahamian Dollar\" },\n  { id: \"BTC\", name: \"Bitcoin\" },\n  { id: \"BTN\", name: \"Bhutanese Ngultrum\" },\n  { id: \"BWP\", name: \"Botswanan Pula\" },\n  { id: \"BYR\", name: \"Belarusian Ruble\" },\n  { id: \"BZD\", name: \"Belize Dollar\" },\n  { id: \"CAD\", name: \"Canadian Dollar\" },\n  { id: \"CDF\", name: \"Congolese Franc\" },\n  { id: \"CHF\", name: \"Swiss Franc\" },\n  { id: \"CLF\", name: \"Chilean Unit of Account (UF)\" },\n  { id: \"CLP\", name: \"Chilean Peso\" },\n  { id: \"CNY\", name: \"Chinese Yuan\" },\n  { id: \"COP\", name: \"Colombian Peso\" },\n  { id: \"CRC\", name: \"Costa Rican Colón\" },\n  { id: \"CUC\", name: \"Cuban Convertible Peso\" },\n  { id: \"CUP\", name: \"Cuban Peso\" },\n  { id: \"CVE\", name: \"Cape Verdean Escudo\" },\n  { id: \"CZK\", name: \"Czech Republic Koruna\" },\n  { id: \"DJF\", name: \"Djiboutian Franc\" },\n  { id: \"DKK\", name: \"Danish Krone\" },\n  { id: \"DOP\", name: \"Dominican Peso\" },\n  { id: \"DZD\", name: \"Algerian Dinar\" },\n  { id: \"EGP\", name: \"Egyptian Pound\" },\n  { id: \"ERN\", name: \"Eritrean Nakfa\" },\n  { id: \"ETB\", name: \"Ethiopian Birr\" },\n  { id: \"EUR\", name: \"Euro\" },\n  { id: \"FJD\", name: \"Fijian Dollar\" },\n  { id: \"FKP\", name: \"Falkland Islands Pound\" },\n  { id: \"GBP\", name: \"British Pound Sterling\" },\n  { id: \"GEL\", name: \"Georgian Lari\" },\n  { id: \"GGP\", name: \"Guernsey Pound\" },\n  { id: \"GHS\", name: \"Ghanaian Cedi\" },\n  { id: \"GIP\", name: \"Gibraltar Pound\" },\n  { id: \"GMD\", name: \"Gambian Dalasi\" },\n  { id: \"GNF\", name: \"Guinean Franc\" },\n  { id: \"GTQ\", name: \"Guatemalan Quetzal\" },\n  { id: \"GYD\", name: \"Guyanaese Dollar\" },\n  { id: \"HKD\", name: \"Hong Kong Dollar\" },\n  { id: \"HNL\", name: \"Honduran Lempira\" },\n  { id: \"HRK\", name: \"Croatian Kuna\" },\n  { id: \"HTG\", name: \"Haitian Gourde\" },\n  { id: \"HUF\", name: \"Hungarian Forint\" },\n  { id: \"IDR\", name: \"Indonesian Rupiah\" },\n  { id: \"ILS\", name: \"Israeli New Sheqel\" },\n  { id: \"IMP\", name: \"Manx pound\" },\n  { id: \"INR\", name: \"Indian Rupee\" },\n  { id: \"IQD\", name: \"Iraqi Dinar\" },\n  { id: \"IRR\", name: \"Iranian Rial\" },\n  { id: \"ISK\", name: \"Icelandic Króna\" },\n  { id: \"JEP\", name: \"Jersey Pound\" },\n  { id: \"JMD\", name: \"Jamaican Dollar\" },\n  { id: \"JOD\", name: \"Jordanian Dinar\" },\n  { id: \"JPY\", name: \"Japanese Yen\" },\n  { id: \"KES\", name: \"Kenyan Shilling\" },\n  { id: \"KGS\", name: \"Kyrgystani Som\" },\n  { id: \"KHR\", name: \"Cambodian Riel\" },\n  { id: \"KMF\", name: \"Comorian Franc\" },\n  { id: \"KPW\", name: \"North Korean Won\" },\n  { id: \"KRW\", name: \"South Korean Won\" },\n  { id: \"KWD\", name: \"Kuwaiti Dinar\" },\n  { id: \"KYD\", name: \"Cayman Islands Dollar\" },\n  { id: \"KZT\", name: \"Kazakhstani Tenge\" },\n  { id: \"LAK\", name: \"Laotian Kip\" },\n  { id: \"LBP\", name: \"Lebanese Pound\" },\n  { id: \"LKR\", name: \"Sri Lankan Rupee\" },\n  { id: \"LRD\", name: \"Liberian Dollar\" },\n  { id: \"LSL\", name: \"Lesotho Loti\" },\n  { id: \"LTL\", name: \"Lithuanian Litas\" },\n  { id: \"LVL\", name: \"Latvian Lats\" },\n  { id: \"LYD\", name: \"Libyan Dinar\" },\n  { id: \"MAD\", name: \"Moroccan Dirham\" },\n  { id: \"MDL\", name: \"Moldovan Leu\" },\n  { id: \"MGA\", name: \"Malagasy Ariary\" },\n  { id: \"MKD\", name: \"Macedonian Denar\" },\n  { id: \"MMK\", name: \"Myanma Kyat\" },\n  { id: \"MNT\", name: \"Mongolian Tugrik\" },\n  { id: \"MOP\", name: \"Macanese Pataca\" },\n  { id: \"MRO\", name: \"Mauritanian Ouguiya\" },\n  { id: \"MUR\", name: \"Mauritian Rupee\" },\n  { id: \"MVR\", name: \"Maldivian Rufiyaa\" },\n  { id: \"MWK\", name: \"Malawian Kwacha\" },\n  { id: \"MXN\", name: \"Mexican Peso\" },\n  { id: \"MYR\", name: \"Malaysian Ringgit\" },\n  { id: \"MZN\", name: \"Mozambican Metical\" },\n  { id: \"NAD\", name: \"Namibian Dollar\" },\n  { id: \"NGN\", name: \"Nigerian Naira\" },\n  { id: \"NIO\", name: \"Nicaraguan Córdoba\" },\n  { id: \"NOK\", name: \"Norwegian Krone\" },\n  { id: \"NPR\", name: \"Nepalese Rupee\" },\n  { id: \"NZD\", name: \"New Zealand Dollar\" },\n  { id: \"OMR\", name: \"Omani Rial\" },\n  { id: \"PAB\", name: \"Panamanian Balboa\" },\n  { id: \"PEN\", name: \"Peruvian Nuevo Sol\" },\n  { id: \"PGK\", name: \"Papua New Guinean Kina\" },\n  { id: \"PHP\", name: \"Philippine Peso\" },\n  { id: \"PKR\", name: \"Pakistani Rupee\" },\n  { id: \"PLN\", name: \"Polish Zloty\" },\n  { id: \"PYG\", name: \"Paraguayan Guarani\" },\n  { id: \"QAR\", name: \"Qatari Rial\" },\n  { id: \"RON\", name: \"Romanian Leu\" },\n  { id: \"RSD\", name: \"Serbian Dinar\" },\n  { id: \"RUB\", name: \"Russian Ruble\" },\n  { id: \"RWF\", name: \"Rwandan Franc\" },\n  { id: \"SAR\", name: \"Saudi Riyal\" },\n  { id: \"SBD\", name: \"Solomon Islands Dollar\" },\n  { id: \"SCR\", name: \"Seychellois Rupee\" },\n  { id: \"SDG\", name: \"Sudanese Pound\" },\n  { id: \"SEK\", name: \"Swedish Krona\" },\n  { id: \"SGD\", name: \"Singapore Dollar\" },\n  { id: \"SHP\", name: \"Saint Helena Pound\" },\n  { id: \"SLL\", name: \"Sierra Leonean Leone\" },\n  { id: \"SOS\", name: \"Somali Shilling\" },\n  { id: \"SRD\", name: \"Surinamese Dollar\" },\n  { id: \"STD\", name: \"São Tomé and Príncipe Dobra\" },\n  { id: \"SVC\", name: \"Salvadoran Colón\" },\n  { id: \"SYP\", name: \"Syrian Pound\" },\n  { id: \"SZL\", name: \"Swazi Lilangeni\" },\n  { id: \"THB\", name: \"Thai Baht\" },\n  { id: \"TJS\", name: \"Tajikistani Somoni\" },\n  { id: \"TMT\", name: \"Turkmenistani Manat\" },\n  { id: \"TND\", name: \"Tunisian Dinar\" },\n  { id: \"TOP\", name: \"Tongan Paʻanga\" },\n  { id: \"TRY\", name: \"Turkish Lira\" },\n  { id: \"TTD\", name: \"Trinidad and Tobago Dollar\" },\n  { id: \"TWD\", name: \"New Taiwan Dollar\" },\n  { id: \"TZS\", name: \"Tanzanian Shilling\" },\n  { id: \"UAH\", name: \"Ukrainian Hryvnia\" },\n  { id: \"UGX\", name: \"Ugandan Shilling\" },\n  { id: \"USD\", name: \"United States Dollar\" },\n  { id: \"UYU\", name: \"Uruguayan Peso\" },\n  { id: \"UZS\", name: \"Uzbekistan Som\" },\n  { id: \"VEF\", name: \"Venezuelan Bolívar Fuerte\" },\n  { id: \"VND\", name: \"Vietnamese Dong\" },\n  { id: \"VUV\", name: \"Vanuatu Vatu\" },\n  { id: \"WST\", name: \"Samoan Tala\" },\n  { id: \"XAF\", name: \"CFA Franc BEAC\" },\n  { id: \"XAG\", name: \"Silver (troy ounce)\" },\n  { id: \"XAU\", name: \"Gold (troy ounce)\" },\n  { id: \"XCD\", name: \"East Caribbean Dollar\" },\n  { id: \"XDR\", name: \"Special Drawing Rights\" },\n  { id: \"XOF\", name: \"CFA Franc BCEAO\" },\n  { id: \"XPF\", name: \"CFP Franc\" },\n  { id: \"YER\", name: \"Yemeni Rial\" },\n  { id: \"ZAR\", name: \"South African Rand\" },\n  { id: \"ZMK\", name: \"Zambian Kwacha (pre-2013)\" },\n  { id: \"ZMW\", name: \"Zambian Kwacha\" },\n  { id: \"ZWL\", name: \"Zimbabwean Dollar\" },\n];\n\nconst Forex = () => {\n  const [forex, setForex] = useState(\"\");\n  const [forexType, setForexType] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  // const [type, setType] = useState(\"\");\n  // const [currency, setCurrency] = useState(\"\");\n  const [filterData, setFilterData] = useState(\"\");\n\n  // ForexAPI\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${filterData}&source=USD&format=1`;\n\n  const sortForex = () => {\n    const sortByName = forexList.map((chicken) => {\n      return {\n        name: chicken.name,\n      };\n    });\n    setForexType(sortByName);\n  };\n  // console.log(forexType);\n\n  useEffect(() => {\n    sortForex();\n  }, []);\n\n  const makeApiCall = async () => {\n    const res = await fetch(forexAPI);\n    const rawData = await res.json();\n\n    console.log(rawData);\n\n    const rawDataArray = [rawData];\n\n    console.log(rawData.quotes);\n    setForex(rawData.quotes);\n    console.log(forex);\n\n    // const array = rawDataArray.map((duck) => {\n    //   return {\n    //     rates: duck.quotes,\n    //   };\n    // });\n    // setQuery(array);\n  };\n  // console.log(query);\n\n  const emptyArray = [];\n\n  const displayName = forexType.map((chicken) => {\n    return emptyArray.push(chicken.name);\n  });\n\n  // const displayNameArray = [displayName];\n  // console.log(emptyArray);\n\n  // console.log(query); // state with selected currency\n\n  const handleSearchFilter = (event) => {\n    // setQuery(event);\n    const searchWord = event;\n    // console.log(searchWord);\n    const newFilter = Object.keys(forexList).reduce((result, key) => {\n      if (forexList[key].name.includes(searchWord)) {\n        result = forexList[key].id;\n      }\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n\n    // const stringData = filterData.map((element, index) => {\n    //   return `${element}`;\n    // }, \"\");\n  };\n  // console.log(filterData);\n\n  // console.log(stringData);\n  // console.log(query);\n\n  // const findId = () => {}; // use query to match forexList\n\n  // twoCalls = (e) => {\n  //   this.functionOne(e);\n  //   this.functionTwo();\n  // };\n\n  // const mappedForexData = .map((element, index) => {\n  //   return (\n  //     <>\n  //       <div key={index}>\n  //         USD: {element.price.USD}\n  //         <br />\n  //         Unit: {element.unit}\n  //       </div>\n  //     </>\n  //   );\n  // });\n\n  const forexArray = forex;\n\n  return (\n    <div>\n      <h2>Select a currency</h2>\n      <DropdownList\n        data={emptyArray}\n        // forex={forexList}\n        onChange={handleSearchFilter}\n        // onChange={(nextValue) => setQuery(nextValue)}\n        // onChange={handleSearchFilter}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <Result forex={forex} /> */}\n      {/* <div>{mappedForexData}</div>; */}\n      <div>\n        {Object.keys(forexArray).map((key, i) => (\n          <p key={i}>\n            {/* <span>1USD:{key}</span> */}\n            <span>\n              1 USD : {forexArray[key]}\n              {filterData}\n            </span>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Forex;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["52","53","54","55","56","57","58","59","60"],[],"import React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\n\nconst cryptoList = [];\n\nconst Crypto = () => {\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [otherToken, setOtherToken] = useState(\"\");\n\n  // ForexAPI\n\n  const apiQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=${otherToken}`;\n  const apiTicker = ``;\n\n  const makeApiCall = async () => {\n    //   const res = await fetch(forexAPI);\n    //   const rawData = await res.json();\n    //   // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    //   const sortForex = forexList.map((chicken) => {\n    //     return {\n    //       CountryName: chicken.name,\n    //     };\n    //   });\n    //   setForexType(sortForex);\n    //   const filteredData = rawDataArray.map((duck) => {\n    //     return {\n    //       price: duck.data.rates,\n    //       unit: duck.data.unit,\n    //     };\n    //   });\n    //   setType(filteredData);\n  };\n  // console.log(type);\n\n  return (\n    <div>\n      <br />\n      <h2>Select a token</h2>\n      <DropdownList\n        // data={cryptoToken}\n        // forex={forexList}\n        onChange={(nextValue) => setQuery(nextValue)}\n      />\n      <button onClick={makeApiCall}>Submit</button>\n      {/* <Result type={type} /> */}\n    </div>\n  );\n};\n\nexport default Crypto;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CryptoTicker.js",["61","62","63","64","65"],[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":28,"column":10,"nodeType":"72","messageId":"73","endLine":28,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":47,"column":9,"nodeType":"72","messageId":"73","endLine":47,"endColumn":24},{"ruleId":"70","severity":1,"message":"76","line":71,"column":9,"nodeType":"72","messageId":"73","endLine":71,"endColumn":30},{"ruleId":"70","severity":1,"message":"77","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"78","line":178,"column":10,"nodeType":"72","messageId":"73","endLine":178,"endColumn":15},{"ruleId":"70","severity":1,"message":"79","line":178,"column":17,"nodeType":"72","messageId":"73","endLine":178,"endColumn":25},{"ruleId":"70","severity":1,"message":"80","line":207,"column":11,"nodeType":"72","messageId":"73","endLine":207,"endColumn":23},{"ruleId":"70","severity":1,"message":"81","line":224,"column":9,"nodeType":"72","messageId":"73","endLine":224,"endColumn":20},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"82","line":4,"column":7,"nodeType":"72","messageId":"73","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"78","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":15},{"ruleId":"70","severity":1,"message":"83","line":8,"column":10,"nodeType":"72","messageId":"73","endLine":8,"endColumn":14},{"ruleId":"70","severity":1,"message":"84","line":8,"column":16,"nodeType":"72","messageId":"73","endLine":8,"endColumn":23},{"ruleId":"70","severity":1,"message":"85","line":9,"column":17,"nodeType":"72","messageId":"73","endLine":9,"endColumn":25},{"ruleId":"70","severity":1,"message":"86","line":10,"column":22,"nodeType":"72","messageId":"73","endLine":10,"endColumn":35},{"ruleId":"70","severity":1,"message":"87","line":14,"column":9,"nodeType":"72","messageId":"73","endLine":14,"endColumn":17},{"ruleId":"70","severity":1,"message":"88","line":15,"column":9,"nodeType":"72","messageId":"73","endLine":15,"endColumn":18},{"ruleId":"70","severity":1,"message":"89","line":6,"column":11,"nodeType":"72","messageId":"73","endLine":6,"endColumn":15},{"ruleId":"70","severity":1,"message":"90","line":6,"column":17,"nodeType":"72","messageId":"73","endLine":6,"endColumn":24},{"ruleId":"70","severity":1,"message":"91","line":10,"column":9,"nodeType":"72","messageId":"73","endLine":10,"endColumn":16},{"ruleId":"92","severity":2,"message":"93","line":38,"column":29,"nodeType":"72","messageId":"94","endLine":38,"endColumn":44},{"ruleId":"95","severity":1,"message":"96","line":41,"column":5,"nodeType":"72","messageId":"97","endLine":41,"endColumn":12},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'commodity' is assigned a value but never used.","'consolidatedAPI' is assigned a value but never used.","'handleSelectionChange' is assigned a value but never used.","'Result' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'rawDataArray' is assigned a value but never used.","'displayName' is assigned a value but never used.","'cryptoList' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'setToken' is assigned a value but never used.","'setOtherToken' is assigned a value but never used.","'apiQuery' is assigned a value but never used.","'apiTicker' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'limiter' is assigned a value but never used.","no-undef","'cryptoApiTicker' is not defined.","undef","no-const-assign","'setData' is constant.","const","no-global-assign","no-unsafe-negation"]