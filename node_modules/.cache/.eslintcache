[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js":"7","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js":"8","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js":"9","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js":"10","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js":"11"},{"size":142,"mtime":1616592305000,"results":"12","hashOfConfig":"13"},{"size":822,"mtime":1648105410295,"results":"14","hashOfConfig":"13"},{"size":2434,"mtime":1648104962252,"results":"15","hashOfConfig":"13"},{"size":10711,"mtime":1648109824819,"results":"16","hashOfConfig":"13"},{"size":3476,"mtime":1648108067491,"results":"17","hashOfConfig":"13"},{"size":879971,"mtime":1647931287181,"results":"18","hashOfConfig":"13"},{"size":2007,"mtime":1648036373000,"results":"19","hashOfConfig":"13"},{"size":2567,"mtime":1648106017181,"results":"20","hashOfConfig":"13"},{"size":238,"mtime":1648007118042,"results":"21","hashOfConfig":"13"},{"size":7155,"mtime":1648025038708,"results":"22","hashOfConfig":"13"},{"size":2575,"mtime":1648103105515,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1as9eb2",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["67","68"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",["69","70","71","72","73","74","75"],[],"import React from \"react\";\n// import SearchBar from \"./component/SearchBar\";\n// import Commodity from \"./component/Commodity\";\n// import Forex from \"./component/Forex\";\n// import Crypto from \"./component/Crypto\";\nimport DataTicker from \"./component/DataTicker\";\n// import TokenList from \"./component/TokenList\";\n// import TokenList from \"./component/TokenList\";\n// import TokenListApiData from \"./component/TokenListApiData\";\nimport AggregateInput from \"./component/AggregateInput\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  return (\n    <div>\n      <DataTicker />\n      <br />\n      <br />\n      <div className=\"container\">\n        <AggregateInput />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",["76","77"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["78","79","80","81","82","83"],[],"import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport forexList from \"./ForexList\";\nimport Forex from \"./Forex\";\n\n// import { DropdownList } from \"react-widgets/cjs\";\n// import Result from \"./Result\";\n// import AggregateInput from \"./AggregateInput\";\n\n//============================================================================================================================================================================================\n\nconst commodityList = [\n  \"RICE\",\n  \"WHEAT\",\n  \"SUGAR\",\n  \"CORN\",\n  \"WTIOIL\",\n  \"BRENTOIL\",\n  \"SOYBEAN\",\n  \"COFFEE\",\n  \"XAU\",\n  \"XAG\",\n  \"XPD\",\n  \"XPT\",\n  \"XRH\",\n  \"RUBBER\",\n  \"ETHANOL\",\n  \"CPO\",\n  \"NG\",\n];\n\nconst Commodity = (props) => {\n  const [type, setType] = useState([]);\n\n  const commodityAPI = `https://www.commodities-api.com/api/latest?access_key=jhvo01w5j98zhcbi517u32j1mc14wgkh1zwzfp8rx4x3bdzujvnvx6gzody4&base=${props.commoditySearchWord}&symbols=USD`;\n\n  const makeApiCall = async () => {\n    const res = await fetch(commodityAPI);\n    const rawData = await res.json();\n\n    const rawDataArray = [rawData];\n    const filteredData = rawDataArray.map((duck) => {\n      return {\n        price: duck.data.rates,\n        unit: duck.data.unit,\n      };\n    });\n    setType(filteredData);\n  };\n\n  const mappedData = type.map((element, index) => {\n    return (\n      <div key={index}>\n        USD : ${element.price.USD} {element.unit}\n        <br />\n      </div>\n    );\n  });\n\n  // console.log(forexList);\n  // const sortNameForex = forexList.map((element, index) => {\n  //   return element.name;\n  // });\n  // console.log(sortNameForex);\n\n  // const sortNameForexArray = [sortNameForex];\n\n  return (\n    <div>\n      <Col>\n        <br />\n        <Button onClick={makeApiCall}>Submit</Button>\n        <br />\n        <br />\n        <br />\n        <div className=\"data\">{mappedData}</div>\n        {/* is propsing down to child (Result component) */}\n\n        <input className=\"input-value\" placeholder=\"Input value here.\"></input>\n        <br />\n        <br />\n        <br />\n        <DropdownList className=\"col\" data={props.forexArray}></DropdownList>\n        <br />\n        <Button>Swap</Button>\n        <br />\n        <br />\n        <DropdownList className=\"col\" data={props.forexArraywx}></DropdownList>\n      </Col>\n    </div>\n  );\n};\n\nexport default Commodity;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["84","85","86","87","88","89","90","91"],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["92","93","94","95","96","97","98"],[],"import React, { useState, useEffect } from \"react\";\n// import { DropdownList } from \"react-widgets/cjs\";\n// import tokenList from \"./TokenListApiData\";\nimport TokenList from \"./TokenList\";\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  // console.log(tokenList);\n\n  // console.log(props.token);\n  // const [query, setQuery] = useState(\"\");\n  // const [type, setType] = useState(\"\");\n  // const [query, setQuery] = useState(\"\");\n  // const [otherQuery, setOtherQuery] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const tokenName = tokenList[i].name;\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  const namesArray = [];\n  // const idArray = [];\n  // const symbolArray = [];\n  // console.log(namesArray);\n\n  // const displayName = tokenList.map((chicken) => {\n  //   return namesArray.push(chicken.name);\n  // });\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    // console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n        // console.log(tokenList[key].id);\n      }\n      // props.setCryptoState(false);\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  };\n  console.log(filterData);\n  console.log(cryptoAPIQuery);\n  // setName = displayName;\n  // console.log(name);\n\n  // useEffect(() => {\n  // displayName();\n  // }, []);\n  // const cryptoList = [{props.token}];\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n    // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    // const sortToken = tokenList.map((chicken) => {\n    //   return {\n    //     tokenPrice: chicken.usd,\n    //   };\n    // });\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  // console.log(tokenPrice);\n\n  // setExtractedData = value;\n  //   const filteredData = rawDataArray.map((duck) => {\n  //     return {\n  //       price: duck.data.rates,\n  //       unit: duck.data.unit,\n  //     };\n  //   });\n  //   setType(filteredData);\n\n  // console.log(tokenPrice);\n\n  // const tokenPriceArray = [tokenPrice];\n  // const obj1 = tokenPriceArray[0];\n\n  // const obj2 = obj1[Object.keys(obj1)[0]];\n  // console.log(obj2);\n\n  // const value = obj2[Object.keys(obj2)[0]];\n  // console.log(tokenPriceArray);\n\n  return (\n    <div>\n      <br />\n      <Button\n        variant=\"dark\"\n        className=\"btn btn-outline-primary\"\n        onClick={makeApiCall}\n      >\n        Submit\n      </Button>\n      <br />\n      <br />\n      <br />\n      <div className=\"data\">Token price : ${extractedData}</div>\n      {/* <Result type={type} /> */}\n    </div>\n  );\n};\n\nexport default Crypto;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js",[],[],["99","100"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js",["101","102","103","104"],[],"import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import TokenListApiData from \"./TokenListApiData\";\nimport Bottleneck from \"bottleneck\";\n\nconst TokenList = (props) => {\n  // const [totalReactPackages, setTotalReactPackages] = useState(null);\n  // const [state, setState] = useState(\"\");\n  // const [list, setList] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [type, setType] = useState([]);\n\n  const tickerData = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n\n  const limiter = new Bottleneck({\n    reservoir: 100, // initial value\n    reservoirRefreshAmount: 100,\n    reservoirRefreshInterval: 60 * 500,\n\n    // also use maxConcurrent and/or minTime for safety\n    maxConcurrent: 1,\n    minTime: 333, // pick a value that makes sense for your use case\n  });\n\n  const makeApiCall = async () => {\n    const res = await fetch(tickerData);\n    const rawData = await res.json();\n    // console.log(rawData);\n    // console.log(rawData.tickers);\n    setData(rawData.tickers);\n    // const rawDataArray = rawData.tickers;\n    // const filterData = () => {\n    const filteredData = rawData.tickers.map((duck) => {\n      return {\n        id: duck.base,\n        price: duck.last,\n      };\n    });\n\n    setType(filteredData);\n    // };\n    const emptyArray = [];\n    const getId = filteredData.map((chicken) => {\n      return emptyArray.push(chicken.id);\n    });\n    // console.log(emptyArray);\n    props.setId(emptyArray);\n  };\n  // console.log(data);\n  // console.log(type);\n  // console.log(props.id);\n\n  const throttledApiCall = limiter.wrap(makeApiCall);\n\n  useEffect(() => {\n    throttledApiCall();\n    makeApiCall();\n    // filterData();\n  }, []);\n\n  const cryptoIdArray = [];\n  const displayId = type.map((chicken) => {\n    return cryptoIdArray.push(chicken.id);\n  });\n  // console.log(displayId);\n  // console.log(cryptoIdArray);\n\n  // props.setId(cryptoIdArray);\n  // console.log(props.id);\n\n  return <div></div>;\n};\n\nexport default TokenList;\n",["105","106"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120"],[],"import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./Forex\";\nimport Commodity from \"./Commodity\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst AggregateInput = (props) => {\n  //   console.log(commodityList);\n\n  //   console.log(forexList);\n\n  const forexNameArray = [];\n  const forexName = forexList.map((chicken) => {\n    return forexNameArray.push(chicken.name);\n  });\n  //   console.log(forexNameArray);\n\n  const [id, setId] = useState([]);\n  const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [forexState, setForexState] = useState(false);\n  const [cryptoState, setCryptoState] = useState(false);\n  const [input, setInput] = useState(\"\");\n  //   console.log(id);\n\n  const aggregatedArray = [];\n\n  const mergeForex = forexNameArray.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCrypto = id.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCommodity = commodityList.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const handleSearchAggregate = (event) => {\n    const searchWord = event;\n\n    if (commodityList.indexOf(searchWord) != -1) {\n      setContent(<Commodity commoditySearchWord={searchWord} />);\n    } else if (\n      forexList.find((element) => element.name === searchWord) != undefined\n    ) {\n      setContent(\n        <Forex\n          forexSearchWord={searchWord}\n          forexState={forexState}\n          setForexState={setForexState}\n        />\n      );\n      //   setState(true);\n      // forex search\n    } else {\n      setContent(\n        <Crypto\n          searchWord={searchWord}\n          cryptoState={cryptoState}\n          setCryptoState={setCryptoState}\n        />\n      );\n    }\n  };\n  //   console.log(event.value);\n\n  //   console.log(content);\n\n  return (\n    <div>\n      <div className=\"int-container\">\n        <div className=\"holder\">\n          <h1 className=\"header\">Aggregator</h1>\n          <DropdownList\n            // value={input}\n            data={aggregatedArray}\n            onChange={handleSearchAggregate}\n          />\n          {/* <button>Submit</button> */}\n          <TokenList id={id} setId={setId} />\n          {/* <Forex  /> */}\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AggregateInput;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js",["121","122","123","124","125","126","127","128"],[],"import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\nimport icon from \"./news-icon.png\";\n// import Ticker from \"react-ticker\";\nimport Bottleneck from \"bottleneck\";\n// import bootstrap from \"bootstrap\";\n\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst DataTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [newsTitle, setNewsTitle] = useState([]);\n\n  const cryptoApiTicker = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,GME,AMC&filter_entities=true&language=en&api_token=tCXxnvvlVvQUAkFItjmYeycDW7eQEEbw1KhLCZI1\";\n\n  // meta=\"11:10:20\"]\n  // const limiter = new Bottleneck({\n  //   maxConcurrent: 1,\n  //   minTime: 5000, // pick a value that makes sense for your use case\n  // });\n\n  // const result = await limiter.schedule(() => fetchCryptoAPI());\n\n  //   const result = await limiter.schedule(() => makeApiCall());\n\n  useEffect(() => {\n    fetchFinancialNewsAPI();\n    fetchCryptoAPI();\n    setInterval(() => {\n      fetchCryptoAPI();\n    }, 10000);\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    const rawData = await res.json();\n    let sevenData = rawData.tickers;\n    const firstSeven = sevenData.filter((element, index) => index < 9);\n    const filteredData = firstSeven.map((element, index) => {\n      return (\n        <FinancialTicker\n          id={index}\n          change={true}\n          symbol={element.base}\n          lastPrice={element.converted_last.usd}\n          currentPrice={element.last}\n        />\n      );\n    });\n    setCryptoData(filteredData);\n  };\n  // console.log(cryptoData);\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    // console.log(rawData.data);\n    const financialMappedData = rawData.data.map((element, index) => {\n      return (\n        <NewsTicker\n          id={index}\n          icon={element.image_url}\n          title={element.title}\n          url={element.url}\n        />\n      );\n    });\n    setNewsData(financialMappedData);\n  };\n\n  return (\n    <div>\n      <Ticker className=\"tickerItemFinancial\">{cryptoData}</Ticker>\n      <div className=\"newsticker\">\n        <Ticker isNewsTicker={true}>{newsData}</Ticker>\n      </div>\n    </div>\n  );\n};\n\nexport default DataTicker;\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":11,"column":18,"nodeType":"135","messageId":"136","endLine":11,"endColumn":33},{"ruleId":"133","severity":1,"message":"138","line":11,"column":35,"nodeType":"135","messageId":"136","endLine":11,"endColumn":45},{"ruleId":"133","severity":1,"message":"139","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":16},{"ruleId":"133","severity":1,"message":"140","line":12,"column":18,"nodeType":"135","messageId":"136","endLine":12,"endColumn":27},{"ruleId":"133","severity":1,"message":"141","line":12,"column":29,"nodeType":"135","messageId":"136","endLine":12,"endColumn":32},{"ruleId":"133","severity":1,"message":"142","line":12,"column":34,"nodeType":"135","messageId":"136","endLine":12,"endColumn":37},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","replacedBy":"144"},{"ruleId":"133","severity":1,"message":"145","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"140","line":2,"column":18,"nodeType":"135","messageId":"136","endLine":2,"endColumn":27},{"ruleId":"133","severity":1,"message":"141","line":2,"column":29,"nodeType":"135","messageId":"136","endLine":2,"endColumn":32},{"ruleId":"133","severity":1,"message":"146","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":17},{"ruleId":"133","severity":1,"message":"147","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":13},{"ruleId":"133","severity":1,"message":"148","line":13,"column":7,"nodeType":"135","messageId":"136","endLine":13,"endColumn":20},{"ruleId":"133","severity":1,"message":"149","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":22},{"ruleId":"133","severity":1,"message":"140","line":5,"column":18,"nodeType":"135","messageId":"136","endLine":5,"endColumn":27},{"ruleId":"133","severity":1,"message":"141","line":5,"column":29,"nodeType":"135","messageId":"136","endLine":5,"endColumn":32},{"ruleId":"133","severity":1,"message":"142","line":5,"column":34,"nodeType":"135","messageId":"136","endLine":5,"endColumn":37},{"ruleId":"133","severity":1,"message":"150","line":184,"column":10,"nodeType":"135","messageId":"136","endLine":184,"endColumn":26},{"ruleId":"133","severity":1,"message":"151","line":211,"column":9,"nodeType":"135","messageId":"136","endLine":211,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":217,"column":6,"nodeType":"154","endLine":217,"endColumn":24,"suggestions":"155"},{"ruleId":"133","severity":1,"message":"156","line":255,"column":9,"nodeType":"135","messageId":"136","endLine":255,"endColumn":29},{"ruleId":"133","severity":1,"message":"157","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":17},{"ruleId":"133","severity":1,"message":"140","line":6,"column":18,"nodeType":"135","messageId":"136","endLine":6,"endColumn":27},{"ruleId":"133","severity":1,"message":"141","line":6,"column":29,"nodeType":"135","messageId":"136","endLine":6,"endColumn":32},{"ruleId":"133","severity":1,"message":"142","line":6,"column":34,"nodeType":"135","messageId":"136","endLine":6,"endColumn":37},{"ruleId":"133","severity":1,"message":"158","line":20,"column":10,"nodeType":"135","messageId":"136","endLine":20,"endColumn":20},{"ruleId":"133","severity":1,"message":"159","line":25,"column":9,"nodeType":"135","messageId":"136","endLine":25,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":36,"column":6,"nodeType":"154","endLine":36,"endColumn":25,"suggestions":"160"},{"ruleId":"129","replacedBy":"161"},{"ruleId":"131","replacedBy":"162"},{"ruleId":"133","severity":1,"message":"163","line":10,"column":10,"nodeType":"135","messageId":"136","endLine":10,"endColumn":14},{"ruleId":"133","severity":1,"message":"164","line":43,"column":11,"nodeType":"135","messageId":"136","endLine":43,"endColumn":16},{"ruleId":"152","severity":1,"message":"165","line":59,"column":6,"nodeType":"154","endLine":59,"endColumn":8,"suggestions":"166"},{"ruleId":"133","severity":1,"message":"167","line":62,"column":9,"nodeType":"135","messageId":"136","endLine":62,"endColumn":18},{"ruleId":"129","replacedBy":"168"},{"ruleId":"131","replacedBy":"169"},{"ruleId":"133","severity":1,"message":"139","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":16},{"ruleId":"133","severity":1,"message":"140","line":9,"column":18,"nodeType":"135","messageId":"136","endLine":9,"endColumn":27},{"ruleId":"133","severity":1,"message":"141","line":9,"column":29,"nodeType":"135","messageId":"136","endLine":9,"endColumn":32},{"ruleId":"133","severity":1,"message":"142","line":9,"column":34,"nodeType":"135","messageId":"136","endLine":9,"endColumn":37},{"ruleId":"133","severity":1,"message":"170","line":17,"column":9,"nodeType":"135","messageId":"136","endLine":17,"endColumn":18},{"ruleId":"133","severity":1,"message":"171","line":23,"column":10,"nodeType":"135","messageId":"136","endLine":23,"endColumn":26},{"ruleId":"133","severity":1,"message":"172","line":23,"column":28,"nodeType":"135","messageId":"136","endLine":23,"endColumn":47},{"ruleId":"133","severity":1,"message":"173","line":27,"column":10,"nodeType":"135","messageId":"136","endLine":27,"endColumn":15},{"ruleId":"133","severity":1,"message":"174","line":27,"column":17,"nodeType":"135","messageId":"136","endLine":27,"endColumn":25},{"ruleId":"133","severity":1,"message":"175","line":32,"column":9,"nodeType":"135","messageId":"136","endLine":32,"endColumn":19},{"ruleId":"133","severity":1,"message":"176","line":36,"column":9,"nodeType":"135","messageId":"136","endLine":36,"endColumn":20},{"ruleId":"133","severity":1,"message":"177","line":40,"column":9,"nodeType":"135","messageId":"136","endLine":40,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":47,"column":43,"nodeType":"180","messageId":"181","endLine":47,"endColumn":45},{"ruleId":"178","severity":1,"message":"179","line":50,"column":64,"nodeType":"180","messageId":"181","endLine":50,"endColumn":66},{"ruleId":"133","severity":1,"message":"182","line":1,"column":38,"nodeType":"135","messageId":"136","endLine":1,"endColumn":47},{"ruleId":"133","severity":1,"message":"183","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":12},{"ruleId":"133","severity":1,"message":"184","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":18},{"ruleId":"133","severity":1,"message":"185","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":14},{"ruleId":"133","severity":1,"message":"186","line":13,"column":10,"nodeType":"135","messageId":"136","endLine":13,"endColumn":14},{"ruleId":"133","severity":1,"message":"187","line":13,"column":16,"nodeType":"135","messageId":"136","endLine":13,"endColumn":23},{"ruleId":"133","severity":1,"message":"188","line":14,"column":10,"nodeType":"135","messageId":"136","endLine":14,"endColumn":19},{"ruleId":"133","severity":1,"message":"189","line":14,"column":21,"nodeType":"135","messageId":"136","endLine":14,"endColumn":33},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Ticker' is defined but never used.","Identifier","unusedVar","'FinancialTicker' is defined but never used.","'NewsTicker' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["190"],["191"],"'useEffect' is defined but never used.","'forexList' is defined but never used.","'Forex' is defined but never used.","'commodityList' is assigned a value but never used.","'AggregateInput' is defined but never used.","'secondaryAPIData' is assigned a value but never used.","'displayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'makeSecondaryApiCall' is assigned a value but never used.","'TokenList' is defined but never used.","'tokenPrice' is assigned a value but never used.","'namesArray' is assigned a value but never used.",["193"],["190"],["191"],"'data' is assigned a value but never used.","'getId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'makeApiCall' and 'throttledApiCall'. Either include them or remove the dependency array.",["194"],"'displayId' is assigned a value but never used.",["190"],["191"],"'forexName' is assigned a value but never used.","'aggregatedSearch' is assigned a value but never used.","'setAggregatedSearch' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'mergeForex' is assigned a value but never used.","'mergeCrypto' is assigned a value but never used.","'mergeCommodity' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'icon' is defined but never used.","'Bottleneck' is defined but never used.","'type' is defined but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'newsTitle' is assigned a value but never used.","'setNewsTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [getResults, props.forexState]",{"range":"201","text":"202"},"Update the dependencies array to be: [getResults, props.cryptoState]",{"range":"203","text":"204"},"Update the dependencies array to be: [makeApiCall, throttledApiCall]",{"range":"205","text":"206"},[8600,8618],"[getResults, props.forexState]",[1245,1264],"[getResults, props.cryptoState]",[1703,1705],"[makeApiCall, throttledApiCall]"]