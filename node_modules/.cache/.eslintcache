[{"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js":"1","/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js":"2","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js":"3","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js":"4","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js":"5","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js":"6","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js":"7","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js":"8","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js":"9","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js":"10","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js":"11"},{"size":142,"mtime":1616592305000,"results":"12","hashOfConfig":"13"},{"size":3866,"mtime":1648060037632,"results":"14","hashOfConfig":"13"},{"size":1806,"mtime":1648059610763,"results":"15","hashOfConfig":"13"},{"size":11350,"mtime":1648059561063,"results":"16","hashOfConfig":"13"},{"size":3524,"mtime":1648059555652,"results":"17","hashOfConfig":"13"},{"size":879971,"mtime":1647931287181,"results":"18","hashOfConfig":"13"},{"size":2007,"mtime":1648036373000,"results":"19","hashOfConfig":"13"},{"size":2448,"mtime":1648059718508,"results":"20","hashOfConfig":"13"},{"size":238,"mtime":1648007118042,"results":"21","hashOfConfig":"13"},{"size":7155,"mtime":1648025038708,"results":"22","hashOfConfig":"13"},{"size":2825,"mtime":1648058314218,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1as9eb2",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},"/Users/inspireadmin/Documents/GitHub/Project_2/src/index.js",[],[],["68","69"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/App.js",["70","71","72","73"],[],"import React from \"react\";\n// import SearchBar from \"./component/SearchBar\";\n// import Commodity from \"./component/Commodity\";\n// import Forex from \"./component/Forex\";\n// import Crypto from \"./component/Crypto\";\nimport DataTicker from \"./component/DataTicker\";\n// import TokenList from \"./component/TokenList\";\n// import TokenList from \"./component/TokenList\";\n// import TokenListApiData from \"./component/TokenListApiData\";\nimport AggregateInput from \"./component/AggregateInput\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  return (\n    <>\n      <Ticker className=\"tickerItemFinancial\">\n        <FinancialTicker\n          id=\"1\"\n          change={true}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"2\"\n          change={true}\n          symbol=\"AAPL\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"3\"\n          change={true}\n          symbol=\"GOOG\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"4\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"5\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"6\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"7\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"8\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"9\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n        <FinancialTicker\n          id=\"10\"\n          change={false}\n          symbol=\"S&P 500\"\n          lastPrice=\"3372.2\"\n          percentage=\"0.38%\"\n          currentPrice=\"12.9\"\n        />\n      </Ticker>\n      <br />\n      <br />\n\n      <br />\n      <Container>\n        <AggregateInput />\n      </Container>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <div className=\"newsticker\">\n        <Ticker isNewsTicker={true}>\n          <NewsTicker\n            id=\"0\"\n            // icon={icon}\n            title=\"\"\n            url=\"\"\n            meta=\"11:10:20\"\n          />\n          <NewsTicker\n            id=\"1\"\n            // icon={icon}\n            title=\"Blue passports to be issued to Brits for the first time in decades next month\"\n            url=\" https://metro.co.uk/2020/02/22/blue-passports-issued-brits-first-time-decades-next-months-12281012/?ito=newsnow-feed\"\n            meta=\"11:10:20\"\n          />\n          <NewsTicker\n            id=\"2\"\n            // icon={icon}\n            title=\"Blue passports to be issued to Brits for the first time in decades next month\"\n            url=\" https://metro.co.uk/2020/02/22/blue-passports-issued-brits-first-time-decades-next-months-12281012/?ito=newsnow-feed\"\n            meta=\"11:10:20\"\n          />\n        </Ticker>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Commodity.js",["74","75","76"],[],"import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\n// import { DropdownList } from \"react-widgets/cjs\";\n// import Result from \"./Result\";\n// import AggregateInput from \"./AggregateInput\";\n\n//============================================================================================================================================================================================\n\nconst commodityList = [\n  \"RICE\",\n  \"WHEAT\",\n  \"SUGAR\",\n  \"CORN\",\n  \"WTIOIL\",\n  \"BRENTOIL\",\n  \"SOYBEAN\",\n  \"COFFEE\",\n  \"XAU\",\n  \"XAG\",\n  \"XPD\",\n  \"XPT\",\n  \"XRH\",\n  \"RUBBER\",\n  \"ETHANOL\",\n  \"CPO\",\n  \"NG\",\n];\n\nconst Commodity = (props) => {\n  const [type, setType] = useState([]);\n\n  const commodityAPI = `https://www.commodities-api.com/api/latest?access_key=jhvo01w5j98zhcbi517u32j1mc14wgkh1zwzfp8rx4x3bdzujvnvx6gzody4&base=${props.commoditySearchWord}&symbols=USD`;\n\n  const makeApiCall = async () => {\n    const res = await fetch(commodityAPI);\n    const rawData = await res.json();\n\n    const rawDataArray = [rawData];\n    const filteredData = rawDataArray.map((duck) => {\n      return {\n        price: duck.data.rates,\n        unit: duck.data.unit,\n      };\n    });\n    setType(filteredData);\n  };\n\n  const mappedData = type.map((element, index) => {\n    return (\n      <>\n        <div key={index}>\n          USD : ${element.price.USD} {element.unit}\n          <br />\n        </div>\n      </>\n    );\n  });\n\n  return (\n    <div>\n      <Container>\n        <Col>\n          <br />\n          <Button variant=\"dark\" onClick={makeApiCall}>\n            Submit\n          </Button>\n\n          <br />\n          {mappedData}\n          {/* is propsing down to child (Result component) */}\n        </Col>\n      </Container>\n    </div>\n  );\n};\n\nexport default Commodity;\n",["77","78"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Forex.js",["79","80","81","82","83","84","85"],[],"import React, { useState, useEffect } from \"react\";\nimport { DropdownList } from \"react-widgets/cjs\";\n// import Result from \"./Result\";\nimport AggregateInput from \"./AggregateInput\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst forexList = [\n  { id: \"AED\", name: \"United Arab Emirates Dirham\" },\n  { id: \"AFN\", name: \"Afghan Afghani\" },\n  { id: \"ALL\", name: \"Albanian Lek\" },\n  { id: \"AMD\", name: \"Armenian Dram\" },\n  { id: \"ANG\", name: \"Netherlands Antillean Guilder\" },\n  { id: \"AOA\", name: \"Angolan Kwanza\" },\n  { id: \"ARS\", name: \"Argentine Peso\" },\n  { id: \"AUD\", name: \"Australian Dollar\" },\n  { id: \"AWG\", name: \"Aruban Florin\" },\n  { id: \"AZN\", name: \"Azerbaijani Manat\" },\n  { id: \"BAM\", name: \"Bosnia-Herzegovina Convertible Mark\" },\n  { id: \"BBD\", name: \"Barbadian Dollar\" },\n  { id: \"BDT\", name: \"Bangladeshi Taka\" },\n  { id: \"BGN\", name: \"Bulgarian Lev\" },\n  { id: \"BHD\", name: \"Bahraini Dinar\" },\n  { id: \"BIF\", name: \"Burundian Franc\" },\n  { id: \"BMD\", name: \"Bermudan Dollar\" },\n  { id: \"BND\", name: \"Brunei Dollar\" },\n  { id: \"BOB\", name: \"Bolivian Boliviano\" },\n  { id: \"BRL\", name: \"Brazilian Real\" },\n  { id: \"BSD\", name: \"Bahamian Dollar\" },\n  { id: \"BTC\", name: \"Bitcoin\" },\n  { id: \"BTN\", name: \"Bhutanese Ngultrum\" },\n  { id: \"BWP\", name: \"Botswanan Pula\" },\n  { id: \"BYR\", name: \"Belarusian Ruble\" },\n  { id: \"BZD\", name: \"Belize Dollar\" },\n  { id: \"CAD\", name: \"Canadian Dollar\" },\n  { id: \"CDF\", name: \"Congolese Franc\" },\n  { id: \"CHF\", name: \"Swiss Franc\" },\n  { id: \"CLF\", name: \"Chilean Unit of Account (UF)\" },\n  { id: \"CLP\", name: \"Chilean Peso\" },\n  { id: \"CNY\", name: \"Chinese Yuan\" },\n  { id: \"COP\", name: \"Colombian Peso\" },\n  { id: \"CRC\", name: \"Costa Rican Colón\" },\n  { id: \"CUC\", name: \"Cuban Convertible Peso\" },\n  { id: \"CUP\", name: \"Cuban Peso\" },\n  { id: \"CVE\", name: \"Cape Verdean Escudo\" },\n  { id: \"CZK\", name: \"Czech Republic Koruna\" },\n  { id: \"DJF\", name: \"Djiboutian Franc\" },\n  { id: \"DKK\", name: \"Danish Krone\" },\n  { id: \"DOP\", name: \"Dominican Peso\" },\n  { id: \"DZD\", name: \"Algerian Dinar\" },\n  { id: \"EGP\", name: \"Egyptian Pound\" },\n  { id: \"ERN\", name: \"Eritrean Nakfa\" },\n  { id: \"ETB\", name: \"Ethiopian Birr\" },\n  { id: \"EUR\", name: \"Euro\" },\n  { id: \"FJD\", name: \"Fijian Dollar\" },\n  { id: \"FKP\", name: \"Falkland Islands Pound\" },\n  { id: \"GBP\", name: \"British Pound Sterling\" },\n  { id: \"GEL\", name: \"Georgian Lari\" },\n  { id: \"GGP\", name: \"Guernsey Pound\" },\n  { id: \"GHS\", name: \"Ghanaian Cedi\" },\n  { id: \"GIP\", name: \"Gibraltar Pound\" },\n  { id: \"GMD\", name: \"Gambian Dalasi\" },\n  { id: \"GNF\", name: \"Guinean Franc\" },\n  { id: \"GTQ\", name: \"Guatemalan Quetzal\" },\n  { id: \"GYD\", name: \"Guyanaese Dollar\" },\n  { id: \"HKD\", name: \"Hong Kong Dollar\" },\n  { id: \"HNL\", name: \"Honduran Lempira\" },\n  { id: \"HRK\", name: \"Croatian Kuna\" },\n  { id: \"HTG\", name: \"Haitian Gourde\" },\n  { id: \"HUF\", name: \"Hungarian Forint\" },\n  { id: \"IDR\", name: \"Indonesian Rupiah\" },\n  { id: \"ILS\", name: \"Israeli New Sheqel\" },\n  { id: \"IMP\", name: \"Manx pound\" },\n  { id: \"INR\", name: \"Indian Rupee\" },\n  { id: \"IQD\", name: \"Iraqi Dinar\" },\n  { id: \"IRR\", name: \"Iranian Rial\" },\n  { id: \"ISK\", name: \"Icelandic Króna\" },\n  { id: \"JEP\", name: \"Jersey Pound\" },\n  { id: \"JMD\", name: \"Jamaican Dollar\" },\n  { id: \"JOD\", name: \"Jordanian Dinar\" },\n  { id: \"JPY\", name: \"Japanese Yen\" },\n  { id: \"KES\", name: \"Kenyan Shilling\" },\n  { id: \"KGS\", name: \"Kyrgystani Som\" },\n  { id: \"KHR\", name: \"Cambodian Riel\" },\n  { id: \"KMF\", name: \"Comorian Franc\" },\n  { id: \"KPW\", name: \"North Korean Won\" },\n  { id: \"KRW\", name: \"South Korean Won\" },\n  { id: \"KWD\", name: \"Kuwaiti Dinar\" },\n  { id: \"KYD\", name: \"Cayman Islands Dollar\" },\n  { id: \"KZT\", name: \"Kazakhstani Tenge\" },\n  { id: \"LAK\", name: \"Laotian Kip\" },\n  { id: \"LBP\", name: \"Lebanese Pound\" },\n  { id: \"LKR\", name: \"Sri Lankan Rupee\" },\n  { id: \"LRD\", name: \"Liberian Dollar\" },\n  { id: \"LSL\", name: \"Lesotho Loti\" },\n  { id: \"LTL\", name: \"Lithuanian Litas\" },\n  { id: \"LVL\", name: \"Latvian Lats\" },\n  { id: \"LYD\", name: \"Libyan Dinar\" },\n  { id: \"MAD\", name: \"Moroccan Dirham\" },\n  { id: \"MDL\", name: \"Moldovan Leu\" },\n  { id: \"MGA\", name: \"Malagasy Ariary\" },\n  { id: \"MKD\", name: \"Macedonian Denar\" },\n  { id: \"MMK\", name: \"Myanma Kyat\" },\n  { id: \"MNT\", name: \"Mongolian Tugrik\" },\n  { id: \"MOP\", name: \"Macanese Pataca\" },\n  { id: \"MRO\", name: \"Mauritanian Ouguiya\" },\n  { id: \"MUR\", name: \"Mauritian Rupee\" },\n  { id: \"MVR\", name: \"Maldivian Rufiyaa\" },\n  { id: \"MWK\", name: \"Malawian Kwacha\" },\n  { id: \"MXN\", name: \"Mexican Peso\" },\n  { id: \"MYR\", name: \"Malaysian Ringgit\" },\n  { id: \"MZN\", name: \"Mozambican Metical\" },\n  { id: \"NAD\", name: \"Namibian Dollar\" },\n  { id: \"NGN\", name: \"Nigerian Naira\" },\n  { id: \"NIO\", name: \"Nicaraguan Córdoba\" },\n  { id: \"NOK\", name: \"Norwegian Krone\" },\n  { id: \"NPR\", name: \"Nepalese Rupee\" },\n  { id: \"NZD\", name: \"New Zealand Dollar\" },\n  { id: \"OMR\", name: \"Omani Rial\" },\n  { id: \"PAB\", name: \"Panamanian Balboa\" },\n  { id: \"PEN\", name: \"Peruvian Nuevo Sol\" },\n  { id: \"PGK\", name: \"Papua New Guinean Kina\" },\n  { id: \"PHP\", name: \"Philippine Peso\" },\n  { id: \"PKR\", name: \"Pakistani Rupee\" },\n  { id: \"PLN\", name: \"Polish Zloty\" },\n  { id: \"PYG\", name: \"Paraguayan Guarani\" },\n  { id: \"QAR\", name: \"Qatari Rial\" },\n  { id: \"RON\", name: \"Romanian Leu\" },\n  { id: \"RSD\", name: \"Serbian Dinar\" },\n  { id: \"RUB\", name: \"Russian Ruble\" },\n  { id: \"RWF\", name: \"Rwandan Franc\" },\n  { id: \"SAR\", name: \"Saudi Riyal\" },\n  { id: \"SBD\", name: \"Solomon Islands Dollar\" },\n  { id: \"SCR\", name: \"Seychellois Rupee\" },\n  { id: \"SDG\", name: \"Sudanese Pound\" },\n  { id: \"SEK\", name: \"Swedish Krona\" },\n  { id: \"SGD\", name: \"Singapore Dollar\" },\n  { id: \"SHP\", name: \"Saint Helena Pound\" },\n  { id: \"SLL\", name: \"Sierra Leonean Leone\" },\n  { id: \"SOS\", name: \"Somali Shilling\" },\n  { id: \"SRD\", name: \"Surinamese Dollar\" },\n  { id: \"STD\", name: \"São Tomé and Príncipe Dobra\" },\n  { id: \"SVC\", name: \"Salvadoran Colón\" },\n  { id: \"SYP\", name: \"Syrian Pound\" },\n  { id: \"SZL\", name: \"Swazi Lilangeni\" },\n  { id: \"THB\", name: \"Thai Baht\" },\n  { id: \"TJS\", name: \"Tajikistani Somoni\" },\n  { id: \"TMT\", name: \"Turkmenistani Manat\" },\n  { id: \"TND\", name: \"Tunisian Dinar\" },\n  { id: \"TOP\", name: \"Tongan Paʻanga\" },\n  { id: \"TRY\", name: \"Turkish Lira\" },\n  { id: \"TTD\", name: \"Trinidad and Tobago Dollar\" },\n  { id: \"TWD\", name: \"New Taiwan Dollar\" },\n  { id: \"TZS\", name: \"Tanzanian Shilling\" },\n  { id: \"UAH\", name: \"Ukrainian Hryvnia\" },\n  { id: \"UGX\", name: \"Ugandan Shilling\" },\n  { id: \"USD\", name: \"United States Dollar\" },\n  { id: \"UYU\", name: \"Uruguayan Peso\" },\n  { id: \"UZS\", name: \"Uzbekistan Som\" },\n  { id: \"VEF\", name: \"Venezuelan Bolívar Fuerte\" },\n  { id: \"VND\", name: \"Vietnamese Dong\" },\n  { id: \"VUV\", name: \"Vanuatu Vatu\" },\n  { id: \"WST\", name: \"Samoan Tala\" },\n  { id: \"XAF\", name: \"CFA Franc BEAC\" },\n  { id: \"XAG\", name: \"Silver (troy ounce)\" },\n  { id: \"XAU\", name: \"Gold (troy ounce)\" },\n  { id: \"XCD\", name: \"East Caribbean Dollar\" },\n  { id: \"XDR\", name: \"Special Drawing Rights\" },\n  { id: \"XOF\", name: \"CFA Franc BCEAO\" },\n  { id: \"XPF\", name: \"CFP Franc\" },\n  { id: \"YER\", name: \"Yemeni Rial\" },\n  { id: \"ZAR\", name: \"South African Rand\" },\n  { id: \"ZMK\", name: \"Zambian Kwacha (pre-2013)\" },\n  { id: \"ZMW\", name: \"Zambian Kwacha\" },\n  { id: \"ZWL\", name: \"Zimbabwean Dollar\" },\n];\n\nconst Forex = (props) => {\n  const [forex, setForex] = useState(\"\");\n  const [forexType, setForexType] = useState([]);\n  // const [query, setQuery] = useState(\"\");\n  // const [type, setType] = useState(\"\");\n  // const [currency, setCurrency] = useState(\"\");\n  const [filterData, setFilterData] = useState(\"\");\n\n  // console.log(props.aggregatedSearch);\n  // ForexAPI\n\n  const forexAPI = `http://apilayer.net/api/live?access_key=b7bf0fb87af0b9ef3ff79b78a423f76c&currencies=${filterData}&source=USD&format=1`;\n\n  const sortForex = () => {\n    // console.log(props.searchWord);\n    const sortByName = forexList.map((chicken) => {\n      return {\n        name: chicken.name,\n      };\n    });\n    setForexType(sortByName);\n  };\n  // console.log(forexType);\n\n  useEffect(() => {\n    sortForex();\n  }, []);\n\n  const makeApiCall = async () => {\n    const res = await fetch(forexAPI);\n    const rawData = await res.json();\n\n    console.log(rawData);\n\n    // const rawDataArray = [rawData];\n\n    // console.log(rawData.quotes);\n    setForex(rawData.quotes);\n    // console.log(forex);\n\n    // const array = rawDataArray.map((duck) => {\n    //   return {\n    //     rates: duck.quotes,\n    //   };\n    // });\n    // setQuery(array);\n  };\n  // console.log(query);\n\n  const emptyArray = [];\n\n  const displayName = forexType.map((chicken) => {\n    return emptyArray.push(chicken.name);\n  });\n\n  console.log(forexAPI);\n\n  // const displayNameArray = [displayName];\n  // console.log(emptyArray);\n\n  // console.log(query); // state with selected currency\n\n  // setQuery(event);\n  // useEffect(() => {\n  //   document.addEventListener(\"trigger_child\", () => doThing());\n\n  //   return () => {\n  //     document.removeEventListener(\"trigger_child\", doThing);\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    getResults();\n  }, [props.forexState]);\n\n  const getResults = () => {\n    const searchWord = props.forexSearchWord;\n    // console.log(searchWord);\n    const newFilter = Object.keys(forexList).reduce((result, key) => {\n      if (forexList[key].name.includes(searchWord)) {\n        result = forexList[key].id;\n      }\n      // props.setForexState(false);\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  };\n\n  console.log(filterData);\n\n  // const stringData = filterData.map((element, index) => {\n  //   return `${element}`;\n  // }, \"\");\n  // };\n  // console.log(filterData);\n\n  // console.log(stringData);\n  // console.log(query);\n\n  // const findId = () => {}; // use query to match forexList\n\n  // twoCalls = (e) => {\n  //   this.functionOne(e);\n  //   this.functionTwo();\n  // };\n\n  // const mappedForexData = .map((element, index) => {\n  //   return (\n  //     <>\n  //       <div key={index}>\n  //         USD: {element.price.USD}\n  //         <br />\n  //         Unit: {element.unit}\n  //       </div>\n  //     </>\n  //   );\n  // });\n\n  const forexArray = forex;\n\n  return (\n    <div>\n      <br />\n      <Button variant=\"dark\" size=\"lg\" onClick={makeApiCall}>\n        Submit\n      </Button>{\" \"}\n      {Object.keys(forexArray).map((key, i) => (\n        <p key={i}>\n          {/* <span>1USD:{key}</span> */}\n          <span>\n            1 USD : {forexArray[key]}\n            {filterData}\n          </span>\n        </p>\n      ))}\n    </div>\n  );\n\n  // <div>\n  //   <h2>Select a currency</h2>\n  //   <DropdownList\n  //     data={emptyArray}\n  //     // forex={forexList}\n  //     onChange={handleSearchFilter}\n  //     // onChange={(nextValue) => setQuery(nextValue)}\n  //     // onChange={handleSearchFilter}\n  //   />\n  //   <button onClick={makeApiCall}>Submit</button>\n  //   {/* <Result forex={forex} /> */}\n  //   {/* <div>{mappedForexData}</div>; */}\n  // <div>\n  //   {Object.keys(forexArray).map((key, i) => (\n  //     <p key={i}>\n  //       {/* <span>1USD:{key}</span> */}\n  //       <span>\n  //         1 USD : {forexArray[key]}\n  //         {filterData}\n  //       </span>\n  //     </p>\n  //   ))}\n  // </div>;\n  // </div>\n  // );\n};\n\nexport default Forex;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/Crypto.js",["86","87","88","89","90","91","92"],[],"import React, { useState, useEffect } from \"react\";\n// import { DropdownList } from \"react-widgets/cjs\";\n// import tokenList from \"./TokenListApiData\";\nimport TokenList from \"./TokenList\";\nimport tokenList from \"./TokenListApiData\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n// import AggregateInput from \"./AggregateInput\";\n\nconst Crypto = (props) => {\n  // console.log(tokenList);\n\n  // console.log(props.token);\n  // const [query, setQuery] = useState(\"\");\n  // const [type, setType] = useState(\"\");\n  // const [query, setQuery] = useState(\"\");\n  // const [otherQuery, setOtherQuery] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const tokenName = tokenList[i].name;\n  const [filterData, setFilterData] = useState(\"\");\n  const [tokenPrice, setTokenPrice] = useState([]);\n  const [extractedData, setExtractedData] = useState(\"\");\n\n  const cryptoAPIQuery = `https://api.coingecko.com/api/v3/simple/price?ids=${filterData}&vs_currencies=USD`;\n\n  const namesArray = [];\n  // const idArray = [];\n  // const symbolArray = [];\n  // console.log(namesArray);\n\n  // const displayName = tokenList.map((chicken) => {\n  //   return namesArray.push(chicken.name);\n  // });\n\n  useEffect(() => {\n    getResults();\n  }, [props.cryptoState]);\n\n  const getResults = () => {\n    const searchWord = props.searchWord;\n    // console.log(searchWord);\n    const newFilter = Object.keys(tokenList).reduce((result, key) => {\n      if (tokenList[key].name.match(searchWord)) {\n        result = tokenList[key].id;\n        // console.log(tokenList[key].id);\n      }\n      // props.setCryptoState(false);\n      return result;\n    }, \"\");\n    setFilterData(newFilter);\n  };\n  console.log(filterData);\n  console.log(cryptoAPIQuery);\n  // setName = displayName;\n  // console.log(name);\n\n  // useEffect(() => {\n  // displayName();\n  // }, []);\n  // const cryptoList = [{props.token}];\n\n  const makeApiCall = async () => {\n    const res = await fetch(cryptoAPIQuery);\n    const rawData = await res.json();\n    // console.log(rawData);\n    //   const rawDataArray = [rawData];\n    //   // console.log(rawDataArray);\n    // const sortToken = tokenList.map((chicken) => {\n    //   return {\n    //     tokenPrice: chicken.usd,\n    //   };\n    // });\n    setTokenPrice(rawData);\n    console.log(rawData);\n\n    const tokenPriceArray = [rawData];\n    const obj1 = tokenPriceArray[0];\n    console.log(obj1);\n\n    const obj2 = obj1[Object.keys(obj1)[0]];\n    console.log(obj2);\n\n    const value = obj2[Object.keys(obj2)[0]];\n    console.log(value);\n    setExtractedData(value);\n  };\n\n  // console.log(tokenPrice);\n\n  // setExtractedData = value;\n  //   const filteredData = rawDataArray.map((duck) => {\n  //     return {\n  //       price: duck.data.rates,\n  //       unit: duck.data.unit,\n  //     };\n  //   });\n  //   setType(filteredData);\n\n  // console.log(tokenPrice);\n\n  // const tokenPriceArray = [tokenPrice];\n  // const obj1 = tokenPriceArray[0];\n\n  // const obj2 = obj1[Object.keys(obj1)[0]];\n  // console.log(obj2);\n\n  // const value = obj2[Object.keys(obj2)[0]];\n  // console.log(tokenPriceArray);\n\n  return (\n    <div>\n      <br />\n      <br />\n      <div>Token price : ${extractedData}</div>\n      <br />\n\n      {/* <br />\n    <h2>Select a token</h2>\n    <DropdownList data={namesArray} onChange={handleSearchFilter} /> */}\n      <br />\n      <Button variant=\"dark\" onClick={makeApiCall}>\n        Submit\n      </Button>\n      <br />\n      {/* <Result type={type} /> */}\n    </div>\n  );\n};\n\nexport default Crypto;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenListApiData.js",[],[],["93","94"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/TokenList.js",["95","96","97","98"],[],"import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import TokenListApiData from \"./TokenListApiData\";\nimport Bottleneck from \"bottleneck\";\n\nconst TokenList = (props) => {\n  // const [totalReactPackages, setTotalReactPackages] = useState(null);\n  // const [state, setState] = useState(\"\");\n  // const [list, setList] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [type, setType] = useState([]);\n\n  const tickerData = \"https://api.coingecko.com/api/v3/exchanges/binance\";\n\n  const limiter = new Bottleneck({\n    reservoir: 100, // initial value\n    reservoirRefreshAmount: 100,\n    reservoirRefreshInterval: 60 * 500,\n\n    // also use maxConcurrent and/or minTime for safety\n    maxConcurrent: 1,\n    minTime: 333, // pick a value that makes sense for your use case\n  });\n\n  const makeApiCall = async () => {\n    const res = await fetch(tickerData);\n    const rawData = await res.json();\n    // console.log(rawData);\n    // console.log(rawData.tickers);\n    setData(rawData.tickers);\n    // const rawDataArray = rawData.tickers;\n    // const filterData = () => {\n    const filteredData = rawData.tickers.map((duck) => {\n      return {\n        id: duck.base,\n        price: duck.last,\n      };\n    });\n\n    setType(filteredData);\n    // };\n    const emptyArray = [];\n    const getId = filteredData.map((chicken) => {\n      return emptyArray.push(chicken.id);\n    });\n    // console.log(emptyArray);\n    props.setId(emptyArray);\n  };\n  // console.log(data);\n  // console.log(type);\n  // console.log(props.id);\n\n  const throttledApiCall = limiter.wrap(makeApiCall);\n\n  useEffect(() => {\n    throttledApiCall();\n    makeApiCall();\n    // filterData();\n  }, []);\n\n  const cryptoIdArray = [];\n  const displayId = type.map((chicken) => {\n    return cryptoIdArray.push(chicken.id);\n  });\n  // console.log(displayId);\n  // console.log(cryptoIdArray);\n\n  // props.setId(cryptoIdArray);\n  // console.log(props.id);\n\n  return <div></div>;\n};\n\nexport default TokenList;\n",["99","100"],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/AggregateInput.js",["101","102","103","104","105","106","107","108","109","110"],[],"import React, { useState } from \"react\";\nimport commodityList from \"./CommodityList\";\nimport forexList from \"./ForexList\";\nimport { DropdownList } from \"react-widgets/cjs\";\nimport TokenList from \"./TokenList\";\nimport Crypto from \"./Crypto\";\nimport Forex from \"./Forex\";\nimport Commodity from \"./Commodity\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst AggregateInput = (props) => {\n  //   console.log(commodityList);\n\n  //   console.log(forexList);\n\n  const forexNameArray = [];\n  const forexName = forexList.map((chicken) => {\n    return forexNameArray.push(chicken.name);\n  });\n  //   console.log(forexNameArray);\n\n  const [id, setId] = useState([]);\n  const [aggregatedSearch, setAggregatedSearch] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [forexState, setForexState] = useState(false);\n  const [cryptoState, setCryptoState] = useState(false);\n  //   console.log(id);\n\n  const aggregatedArray = [];\n\n  const mergeForex = forexNameArray.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCrypto = id.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const mergeCommodity = commodityList.map((chicken) => {\n    return aggregatedArray.push(chicken);\n  });\n\n  const handleSearchAggregate = (event) => {\n    const searchWord = event;\n\n    if (commodityList.indexOf(searchWord) != -1) {\n      setContent(<Commodity commoditySearchWord={searchWord} />);\n    } else if (\n      forexList.find((element) => element.name === searchWord) != undefined\n    ) {\n      setContent(\n        <Forex\n          forexSearchWord={searchWord}\n          forexState={forexState}\n          setForexState={setForexState}\n        />\n      );\n      //   setState(true);\n      // forex search\n    } else {\n      setContent(\n        <Crypto\n          searchWord={searchWord}\n          cryptoState={cryptoState}\n          setCryptoState={setCryptoState}\n        />\n      );\n    }\n  };\n  //   console.log(aggregatedSearch);\n\n  //   console.log(content);\n\n  return (\n    <div>\n      <Container>\n        <Col>\n          <h1>Aggreator</h1>\n          <DropdownList\n            data={aggregatedArray}\n            onChange={handleSearchAggregate}\n          />\n          {/* <button>Submit</button> */}\n          <TokenList id={id} setId={setId} />\n          {/* <Forex  /> */}\n          {content}\n        </Col>\n      </Container>\n    </div>\n  );\n};\n\nexport default AggregateInput;\n","/Users/inspireadmin/Documents/GitHub/Project_2/src/component/CommodityList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/ForexList.js",[],[],"/Users/inspireadmin/Documents/GitHub/Project_2/src/component/DataTicker.js",["111","112","113","114","115","116","117","118","119","120","121"],[],"import React, { useState, useEffect, Component } from \"react\";\nimport Ticker, { FinancialTicker, NewsTicker } from \"nice-react-ticker\";\n// import icon from \"./news-icon.png\";\n// import Ticker from \"react-ticker\";\nimport Bottleneck from \"bottleneck\";\n// import bootstrap from \"bootstrap\";\n\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst DataTicker = () => {\n  const [cryptoData, setCryptoData] = useState([]);\n  const [newsData, setNewsData] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [newsTitle, setNewsTitle] = useState([]);\n\n  const cryptoApiTicker =\n    \"https://api.coingecko.com/api/v3/exchanges/binance/tickers\";\n  const financialNewsTicker =\n    \"https://api.marketaux.com/v1/news/all?symbols=TSLA,AMZN,MSFT,APPL&filter_entities=true&language=en&api_token=HtQPxNVoj5bYyudPypD08TDxD7MdNbMkUB69DXJe\";\n\n  // const limiter = new Bottleneck({\n  //   maxConcurrent: 1,\n  //   minTime: 5000, // pick a value that makes sense for your use case\n  // });\n\n  // const result = await limiter.schedule(() => fetchCryptoAPI());\n\n  //   const result = await limiter.schedule(() => makeApiCall());\n\n  useEffect(() => {\n    fetchCryptoAPI();\n    fetchFinancialNewsAPI();\n\n    //   throttledApiCall();\n    //   throttledNewsApiCall();\n    //   // filterData();\n  }, []);\n\n  const fetchCryptoAPI = async () => {\n    const res = await fetch(cryptoApiTicker);\n    // console.log(res);\n    const rawData = await res.json();\n    // console.log(rawData);\n    setCryptoData();\n    const filteredData = rawData.tickers.map((element, index) => {\n      return (\n        <div key={index}>\n          symbol: {element.base}, price: {element.last}, priceBTC:{\" \"}\n          {element.converted_last.btc},\n        </div>\n      );\n    });\n    return filteredData;\n    setType(filteredData);\n    console.log(filteredData);\n  };\n\n  const fetchFinancialNewsAPI = async () => {\n    const res = await fetch(financialNewsTicker);\n    const rawData = await res.json();\n    console.log(rawData.data);\n    const extractTitle = rawData.data.map((duck) => {\n      return {\n        title: duck.title,\n        url: duck.url,\n        imgurl: duck.image_url,\n      };\n    });\n    setNewsTitle(extractTitle);\n  };\n  console.log(newsTitle);\n\n  //   const allThePromises = data.map((item) => {\n  //     return throttledApiCall();\n  //   });\n  //   const rawData = await limiter.schedule();\n\n  // const filteredData = rawData.map((element, index) => {\n  //   return {\n  //     symbol: duck.coins.symbol,\n  //     priceBtc: duck.coins.price_btc,\n  //   };\n  // });\n  // setType(filteredData);\n\n  // const filteredData = rawDataArray.map((duck) => {\n  //   return {\n  //     price: duck.data.rates,\n  //     unit: duck.data.unit,\n  //   };\n  // });\n  // setType(filteredData);\n\n  return <div></div>;\n};\n\nexport default DataTicker;\n",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":12,"column":10,"nodeType":"128","messageId":"129","endLine":12,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":12,"column":29,"nodeType":"128","messageId":"129","endLine":12,"endColumn":32},{"ruleId":"126","severity":1,"message":"132","line":12,"column":34,"nodeType":"128","messageId":"129","endLine":12,"endColumn":37},{"ruleId":"126","severity":1,"message":"133","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"131","line":2,"column":29,"nodeType":"128","messageId":"129","endLine":2,"endColumn":32},{"ruleId":"126","severity":1,"message":"134","line":10,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":20},{"ruleId":"122","replacedBy":"135"},{"ruleId":"124","replacedBy":"136"},{"ruleId":"126","severity":1,"message":"137","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":22},{"ruleId":"126","severity":1,"message":"138","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":22},{"ruleId":"126","severity":1,"message":"139","line":5,"column":18,"nodeType":"128","messageId":"129","endLine":5,"endColumn":27},{"ruleId":"126","severity":1,"message":"131","line":5,"column":29,"nodeType":"128","messageId":"129","endLine":5,"endColumn":32},{"ruleId":"126","severity":1,"message":"132","line":5,"column":34,"nodeType":"128","messageId":"129","endLine":5,"endColumn":37},{"ruleId":"126","severity":1,"message":"140","line":228,"column":9,"nodeType":"128","messageId":"129","endLine":228,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":250,"column":6,"nodeType":"143","endLine":250,"endColumn":24,"suggestions":"144"},{"ruleId":"126","severity":1,"message":"145","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":17},{"ruleId":"126","severity":1,"message":"139","line":6,"column":18,"nodeType":"128","messageId":"129","endLine":6,"endColumn":27},{"ruleId":"126","severity":1,"message":"131","line":6,"column":29,"nodeType":"128","messageId":"129","endLine":6,"endColumn":32},{"ruleId":"126","severity":1,"message":"132","line":6,"column":34,"nodeType":"128","messageId":"129","endLine":6,"endColumn":37},{"ruleId":"126","severity":1,"message":"146","line":20,"column":10,"nodeType":"128","messageId":"129","endLine":20,"endColumn":20},{"ruleId":"126","severity":1,"message":"147","line":25,"column":9,"nodeType":"128","messageId":"129","endLine":25,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":36,"column":6,"nodeType":"143","endLine":36,"endColumn":25,"suggestions":"148"},{"ruleId":"122","replacedBy":"149"},{"ruleId":"124","replacedBy":"150"},{"ruleId":"126","severity":1,"message":"151","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":14},{"ruleId":"126","severity":1,"message":"152","line":43,"column":11,"nodeType":"128","messageId":"129","endLine":43,"endColumn":16},{"ruleId":"141","severity":1,"message":"153","line":59,"column":6,"nodeType":"143","endLine":59,"endColumn":8,"suggestions":"154"},{"ruleId":"126","severity":1,"message":"155","line":62,"column":9,"nodeType":"128","messageId":"129","endLine":62,"endColumn":18},{"ruleId":"122","replacedBy":"156"},{"ruleId":"124","replacedBy":"157"},{"ruleId":"126","severity":1,"message":"130","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":9,"column":29,"nodeType":"128","messageId":"129","endLine":9,"endColumn":32},{"ruleId":"126","severity":1,"message":"158","line":17,"column":9,"nodeType":"128","messageId":"129","endLine":17,"endColumn":18},{"ruleId":"126","severity":1,"message":"159","line":23,"column":10,"nodeType":"128","messageId":"129","endLine":23,"endColumn":26},{"ruleId":"126","severity":1,"message":"160","line":23,"column":28,"nodeType":"128","messageId":"129","endLine":23,"endColumn":47},{"ruleId":"126","severity":1,"message":"161","line":31,"column":9,"nodeType":"128","messageId":"129","endLine":31,"endColumn":19},{"ruleId":"126","severity":1,"message":"162","line":35,"column":9,"nodeType":"128","messageId":"129","endLine":35,"endColumn":20},{"ruleId":"126","severity":1,"message":"163","line":39,"column":9,"nodeType":"128","messageId":"129","endLine":39,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":46,"column":43,"nodeType":"166","messageId":"167","endLine":46,"endColumn":45},{"ruleId":"164","severity":1,"message":"165","line":49,"column":64,"nodeType":"166","messageId":"167","endLine":49,"endColumn":66},{"ruleId":"126","severity":1,"message":"168","line":1,"column":38,"nodeType":"128","messageId":"129","endLine":1,"endColumn":47},{"ruleId":"126","severity":1,"message":"169","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"170","line":2,"column":18,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"171","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":45},{"ruleId":"126","severity":1,"message":"172","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"173","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":14},{"ruleId":"126","severity":1,"message":"174","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":20},{"ruleId":"126","severity":1,"message":"175","line":12,"column":10,"nodeType":"128","messageId":"129","endLine":12,"endColumn":18},{"ruleId":"126","severity":1,"message":"176","line":12,"column":20,"nodeType":"128","messageId":"129","endLine":12,"endColumn":31},{"ruleId":"126","severity":1,"message":"177","line":13,"column":10,"nodeType":"128","messageId":"129","endLine":13,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":54,"column":5,"nodeType":"180","messageId":"181","endLine":55,"endColumn":31},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'DataTicker' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useEffect' is defined but never used.","'commodityList' is assigned a value but never used.",["182"],["183"],"'DropdownList' is defined but never used.","'AggregateInput' is defined but never used.","'Container' is defined but never used.","'displayName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'TokenList' is defined but never used.","'tokenPrice' is assigned a value but never used.","'namesArray' is assigned a value but never used.",["185"],["182"],["183"],"'data' is assigned a value but never used.","'getId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'makeApiCall' and 'throttledApiCall'. Either include them or remove the dependency array.",["186"],"'displayId' is assigned a value but never used.",["182"],["183"],"'forexName' is assigned a value but never used.","'aggregatedSearch' is assigned a value but never used.","'setAggregatedSearch' is assigned a value but never used.","'mergeForex' is assigned a value but never used.","'mergeCrypto' is assigned a value but never used.","'mergeCommodity' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'Ticker' is defined but never used.","'FinancialTicker' is defined but never used.","'NewsTicker' is defined but never used.","'Bottleneck' is defined but never used.","'type' is defined but never used.","'cryptoData' is assigned a value but never used.","'newsData' is assigned a value but never used.","'setNewsData' is assigned a value but never used.","'type' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [getResults, props.forexState]",{"range":"193","text":"194"},"Update the dependencies array to be: [getResults, props.cryptoState]",{"range":"195","text":"196"},"Update the dependencies array to be: [makeApiCall, throttledApiCall]",{"range":"197","text":"198"},[9173,9191],"[getResults, props.forexState]",[1245,1264],"[getResults, props.cryptoState]",[1703,1705],"[makeApiCall, throttledApiCall]"]